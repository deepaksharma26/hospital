{"version":3,"file":"static/js/369.b3ecbd57.chunk.js","mappings":"4bAkBA,SAASA,EAAcC,GACrB,GAAY,IAARA,EAAW,MAAO,OACH,kBAARA,IAAkBA,EAAMC,OAAOD,IAC1C,MAAME,EAAI,CACR,GAAI,MAAO,MAAO,QAAS,OAAQ,OAAQ,MAAO,QAAS,QAAS,OAAQ,MAC5E,SAAU,SAAU,WAAY,WAAY,UAAW,UAAW,YAAa,WAAY,YAEvFC,EAAI,CAAC,GAAI,GAAI,SAAU,SAAU,QAAS,QAAS,QAAS,UAAW,SAAU,UAEjFC,EAAQC,KAAKC,MAAMN,EAAM,KACzBO,EAAOF,KAAKC,MAAON,EAAM,IAAY,KACrCQ,EAAWH,KAAKC,MAAON,EAAM,IAAU,KACvCS,EAAUJ,KAAKC,MAAON,EAAM,IAAQ,KACpCU,EAAOV,EAAM,IAEnB,IAAIW,EAAS,GAUb,OATIP,IAAOO,GAAUZ,EAAcK,GAAS,WACxCG,IAAMI,GAAUZ,EAAcQ,GAAQ,UACtCC,IAAUG,GAAUZ,EAAcS,GAAY,cAC9CC,IAASE,GAAUT,EAAEO,GAAW,aAChCC,IACa,KAAXC,IAAeA,GAAU,QACdA,GAAXD,EAAO,GAAcR,EAAEQ,GACZP,EAAEE,KAAKC,MAAMI,EAAO,MAAQA,EAAO,GAAK,IAAMR,EAAEQ,EAAO,IAAM,KAEvEC,EAAOC,MAChB,CAEA,MA8pBA,EA9pBoBC,KAClB,MAAMC,GAAYC,EAAAA,EAAAA,KAAYD,WACxB,gBAAEE,IAAoBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMF,kBACnD,YAAEG,IAAgBF,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,cAC/C,eAAEC,IAAmBH,EAAAA,EAAAA,IAAaC,GAAUA,EAAMG,gBAClD,aAAEC,IAAiBL,EAAAA,EAAAA,IAAaC,GAAUA,EAAMI,cAChDC,GAAWC,EAAAA,EAAAA,OACX,YAAEC,IAAgBR,EAAAA,EAAAA,IAAaC,GAAUA,EAAMQ,SAC/CC,GAAcC,EAAAA,EAAAA,OAGbC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,WAAY,GACZC,KAAM,GACNC,QAAS,GACTC,QAAS,MAEJC,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,CACnDO,YAAa,GACbjB,cAAe,GACfkB,aAAa,IAAIC,MAAOC,cAAcC,MAAM,KAAK,MAE5CC,EAAOC,IAAYb,EAAAA,EAAAA,UAAS,CACjC,CAAET,aAAa,GAAIuB,SAAU,GAAIC,SAAU,EAAGC,UAAW,EAAGC,WAAY,EAAGC,IAAK,EAAGC,OAAQ,EAAGC,SAAU,MAEnGC,EAAQC,IAAatB,EAAAA,EAAAA,UAAS,KAC9BuB,EAAeC,IAAqBxB,EAAAA,EAAAA,UAAS,KAC7CyB,EAAeC,IAAoB1B,EAAAA,EAAAA,UAAS,KAC5C2B,EAAiBC,IAAsB5B,EAAAA,EAAAA,UAAS,CAAC,IACjD6B,EAAuBC,IAA4B9B,EAAAA,EAAAA,UAAS,CAAC,GAC9D+B,IAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,WAAU,KACRzC,GAAS0C,EAAAA,EAAAA,IAAiBnD,IAAYoD,KAAMC,IACtCA,EAAIC,MACNC,QAAQD,MAAM,+BAAgCD,EAAIC,QAGpDtC,EAAY,CACVE,WAAYmC,EAAIG,QAAQC,OACxBtC,KAAMkC,EAAIG,QAAQE,cAAgB,GAClCtC,QAASiC,EAAIG,QAAQG,iBAAmB,GACxCtC,QAASgC,EAAIG,QAAQI,eAAiB,KAExCrC,EAAkB,CAChBC,YAAa6B,EAAIG,QAAQK,MAAQ,GACjCtD,cAAe8C,EAAIG,QAAQM,UAAY,GACvCrC,YAAa4B,EAAIG,QAAQO,YAAc,IAAIrC,KAAK2B,EAAIG,QAAQO,aAAapC,cAAcC,MAAM,KAAK,IAAK,IAAIF,MAAOC,cAAcC,MAAM,KAAK,KAE7IE,EAASuB,EAAIG,QAAQlC,eAAe0C,IAAIC,IAAI,CAC1CzD,aAAcyD,EAAKzD,cAAgB,GACnCuB,SAAUkC,EAAK9C,MAAQ,GACvBa,SAAUiC,EAAKjC,UAAY,EAC3BC,UAAWgC,EAAKhC,WAAa,EAC7BC,WAAY+B,EAAK/B,YAAc,EAC/BC,IAAK8B,EAAK9B,KAAO,EACjBC,OAAQ6B,EAAKC,YAAc,EAC3B7B,SAAU4B,EAAK5B,UAAY,MAE7BE,EAAUc,EAAIG,QAAQW,SAAW,IACjC1B,EAAiBY,EAAIG,QAAQhB,eAAiB,IAC9CG,EAAiBU,EAAIG,QAAQY,sBAAwB,IACrDvB,EAAmB,CAAC,GACpBE,EAAyB,CAAC,MACzBsB,MAAOf,IACRC,QAAQD,MAAM,+BAAgCA,KAEhD7C,GAAS6D,EAAAA,EAAAA,OACT7D,GAAS8D,EAAAA,EAAAA,MACT9D,GAAS+D,EAAAA,EAAAA,OACT/D,GAASgE,EAAAA,EAAAA,QACR,CAAChE,EAAUT,IAGd,MAAM0E,GAAwBC,IAC5B3D,EAAY,IAAKD,EAAU,CAAC4D,EAAEC,OAAOzD,MAAOwD,EAAEC,OAAOC,SAEjDC,GAA8BH,IAClCpD,EAAkB,IAAKD,EAAgB,CAACqD,EAAEC,OAAOzD,MAAOwD,EAAEC,OAAOC,SAE7DE,GAAmBA,CAACC,EAAKC,EAAOJ,KACpC,MAAMK,EAAcrD,EAAMmC,IAAI,CAACC,EAAMkB,KACnC,GAAIA,IAAMH,EAAK,OAAOf,EACtB,MAAMmB,EAAYC,GACH,kBAANA,GAAwB,OAANA,GAAc,mBAAoBA,EACvDlG,OAAOkG,EAAEC,gBACTnG,OAAOkG,IAAM,EACnB,IAAIE,EAAU,IAAKtB,EAAM,CAACgB,GAAQ,CAAC,WAAY,YAAa,WAAY,aAAc,OAAOO,SAASP,GAASG,EAAUP,GAASA,GAelI,OAdAU,EAAQtD,UAAYmD,EAAUG,EAAQtD,WACtCsD,EAAQvD,SAAWoD,EAAUG,EAAQvD,UACrCuD,EAAQlD,SAAW+C,EAAUG,EAAQlD,UACrCkD,EAAQrD,WAAakD,EAAUG,EAAQrD,YACvCqD,EAAQpD,IAAMiD,EAAUG,EAAQpD,KAClB,eAAV8C,GAAoC,cAAVA,GAAmC,aAAVA,IACrDM,EAAQpD,KAAQoD,EAAQtD,UAAYsD,EAAQvD,SAAWuD,EAAQrD,WAAc,KAAKuD,QAAQ,IAE9E,QAAVR,IACFM,EAAQrD,WAAaqD,EAAQtD,WAAasD,EAAQvD,UAC9B,IAAduD,EAAQpD,KAAcoD,EAAQtD,UAAYsD,EAAQvD,WAAWyD,QAAQ,GACvE,GAENF,EAAQnD,OAASmD,EAAQtD,UAAYsD,EAAQvD,SAAW7C,OAAOoG,EAAQpD,KAAOoD,EAAQlD,SAC/EkD,IAGT,GADAzD,EAASoD,GACK,aAAVD,EAAsB,CACxB,MAAMS,EAAWlF,GAAgBA,EAC9BmF,OAAQC,GACPA,EAAWzE,KAAK0E,cAAcL,SAASX,EAAMgB,gBAEjDhD,EAAoBiD,IAAI,IAAWA,EAAM,CAACd,GAAMU,KAChD3C,EAAyB+C,IAAI,IAAUA,EAAM,CAACd,QAAMe,IACtD,GAEIC,GAAgBA,KACpBlE,EAAS,IAAID,EAAO,CAACrB,aAAa,GAAIuB,SAAU,GAAIC,SAAU,EAAGC,UAAW,EAAGC,WAAY,EAAGC,IAAK,EAAGC,OAAQ,EAAGC,SAAU,MAKvH4D,GAAwBA,CAACjB,EAAKY,KAClC,MAAMR,EAAYC,GACH,kBAANA,GAAwB,OAANA,GAAc,mBAAoBA,EACvDlG,OAAOkG,EAAEC,gBACTnG,OAAOkG,IAAM,EACbH,EAAcrD,EAAMmC,IAAI,CAACC,EAAMkB,KACnC,GAAIA,IAAMH,EAAK,OAAOf,EACtB,MAAMhC,EAAYmD,EAAUQ,EAAW3D,WACjCD,EAAWoD,EAAUQ,EAAW5D,WAAa,EAC7CE,EAAakD,EAAUQ,EAAW1D,YAAc0D,EAAWM,aAAe,GAChF,IAAI/D,EAAMiD,EAAUQ,EAAWzD,KAC3BD,IACFC,EAAOF,EAAYD,EAAWE,EAAc,KAE9C,MAAMG,EAAW+C,EAAUQ,EAAWvD,UAChCD,EAASH,EAAYD,EAAWG,EAAME,EAC5C,MAAO,IACF4B,EACHzD,aAAcoF,EAAWO,IACzBpE,SAAU6D,EAAWzE,KACrBa,WACAC,YACAC,aACAC,MACAE,WACAD,YAGJN,EAASoD,GACTrC,EAAoBiD,IAAI,IAAWA,EAAM,CAACd,GAAM,OAI5CoB,GAAcvE,EAAMwE,OAAO,CAACC,EAAKrC,IAASqC,EAAMrC,EAAK7B,OAAQ,GAC7DmE,GAAW1E,EAAMwE,OAAO,CAACC,EAAKrC,KAClC,IAAI9B,EAAM8B,EAAK9B,IAMf,OAJEA,EADiB,kBAARA,GAA4B,OAARA,GAAgB,mBAAoBA,EAC3DhD,OAAOgD,EAAImD,gBAEXnG,OAAOgD,IAAQ,EAEhBmE,EAAMnE,GACZ,GACGqE,GAAgB3E,EAAMwE,OAAO,CAACC,EAAKrC,KACvC,IAAI5B,EAAW4B,EAAK5B,SAMpB,OAJEA,EADsB,kBAAbA,GAAsC,OAAbA,GAAqB,mBAAoBA,EAChElD,OAAOkD,EAASiD,gBAEhBnG,OAAOkD,IAAa,EAE1BiE,EAAMjE,GACZ,GAmDH,OACEoE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPC,MAAO,CAAEC,GAAI,OAAQC,GAAKjG,EAAc,IAAO,MAC/CkG,GAAI,OACJC,GAAI,EACJC,EAAG,CAAEJ,GAAI,EAAGK,GAAI,IAChBC,SAAA,EAEAV,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACT,GAAI,CACTM,EAAG,EACHI,GAAI,EACJC,WAAY,mDACZC,MAAO,OACPC,aAAc,EACdC,UAAW,EACXC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBC,cAAe,CAAEhB,GAAI,SAAUC,GAAI,QACnCK,SAAA,EACAW,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,WAAW,OAAMd,SAAC,8BAG3CW,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLF,QAAQ,YACRT,MAAM,YACNZ,GAAI,CACFsB,WAAY,IACZX,WAAY,mDACZC,MAAO,OACPE,UAAW,EACXT,GAAI,CAAEH,GAAI,EAAGC,GAAI,GACjB,UAAW,CACTQ,WAAY,qDAGhBa,QAASA,IAAMnF,GAASoF,EAAAA,EAAWC,YAAYlB,SAChD,wBAMHW,EAAAA,EAAAA,KAACV,EAAAA,EAAK,CAACT,GAAI,CACTU,GAAI,EACJJ,EAAG,EACHO,aAAc,EACdC,UAAW,EACXH,WAAY,0BACZH,UACAV,EAAAA,EAAAA,MAAC6B,EAAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAErB,SAAA,EACzBW,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACrE,MAAI,EAAC4C,GAAI,GAAIK,GAAI,EAAEC,UACvBW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRC,MAAM,cACNvH,KAAK,aACL0D,MAAO9D,EAASG,WAChByH,SAAUjE,GACVkE,WAAS,EACTC,UAAQ,EACRC,WAAY,CAAEC,aAAc,YAGhCjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACrE,MAAI,EAAC4C,GAAI,GAAIK,GAAI,EAAEC,UACvBW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRC,MAAM,OACNvH,KAAK,OACL0D,MAAO9D,EAASI,KAChBwH,SAAUjE,GACVkE,WAAS,EACTC,UAAQ,EACRC,WAAY,CAAEC,aAAc,YAGhCjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACrE,MAAI,EAAC4C,GAAI,GAAIK,GAAI,EAAEC,UACvBW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRC,MAAM,UACNvH,KAAK,UACL0D,MAAO9D,EAASK,QAChBuH,SAAUjE,GACVkE,WAAS,EACTC,UAAQ,EACRC,WAAY,CAAEC,aAAc,YAGhCjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACrE,MAAI,EAAC4C,GAAI,GAAIK,GAAI,EAAEC,UACvBW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRC,MAAM,UACNvH,KAAK,UACL0D,MAAO9D,EAASM,QAChBsH,SAAUjE,GACVkE,WAAS,EACTC,UAAQ,EACRC,WAAY,CAAEC,aAAc,YAGhCjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACrE,MAAI,EAAC4C,GAAI,GAAIK,GAAI,EAAEC,UACvBW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRO,QAAM,EACNN,MAAM,eACNvH,KAAK,cACL0D,MAAOvD,EAAeE,YACtBmH,SAAU7D,GACV8D,WAAS,EACTC,UAAQ,EACRlC,GAAI,CAAEC,MAAO,KACbkC,WAAY,CAAEC,aAAc,OAAQ5B,SAEnCjH,GAAmBA,EAAgB8D,IAAKiF,IACvCnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAQ,CAAYrE,MAAW,OAAJoE,QAAI,IAAJA,OAAI,EAAJA,EAAM9H,KAAKgG,SAAM,OAAJ8B,QAAI,IAAJA,OAAI,EAAJA,EAAM9H,MAAhC8H,SAIrBnB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACrE,MAAI,EAAC4C,GAAI,GAAIK,GAAI,EAAEC,UACvBW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRO,QAAM,EACNN,MAAM,iBACNvH,KAAK,gBACL0D,MAAOvD,EAAef,cAAgBe,EAAef,cAAgB,UACrEoI,SAAU7D,GACV8D,WAAS,EACTC,UAAQ,EACRlC,GAAI,CAAEC,MAAO,KACbkC,WAAY,CAAEC,aAAc,OAAQ5B,SAEnC7G,GAAkBA,EAAe0D,IAAKmF,IACrCrB,EAAAA,EAAAA,KAACoB,EAAAA,EAAQ,CAAiBrE,MAAW,OAAJsE,QAAI,IAAJA,OAAI,EAAJA,EAAMhI,KAAKgG,SAAM,OAAJgC,QAAI,IAAJA,OAAI,EAAJA,EAAMhI,MAAjC,OAAJgI,QAAI,IAAJA,OAAI,EAAJA,EAAMhD,WAI3B2B,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACrE,MAAI,EAAC4C,GAAI,GAAIK,GAAI,EAAEC,UACvBW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRC,MAAM,eACNvH,KAAK,cACL8H,KAAK,OACLpE,MAAOvD,EAAeG,YACtBkH,SAAU7D,GACV8D,WAAS,EACTQ,gBAAiB,CAAEC,QAAQ,GAC3BR,UAAQ,EACRC,WAAY,CAAEC,aAAc,iBAOpCtC,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACT,GAAI,CACTM,EAAG,EACHI,GAAI,EACJG,aAAc,EACdC,UAAW,EACXH,WAAY,0BACZH,SAAA,EACAV,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPe,QAAS,OACTG,cAAe,CAAEhB,GAAI,SAAUC,GAAI,OACnCwC,IAAK,EACL3B,WAAY,CAAEd,GAAI,aAAcC,GAAI,UACpCc,eAAgB,gBAChB2B,aAAc,oBACdC,QAAS,OACTnC,GAAI,EACJoC,gBAAiB,WACjBtC,SAAA,EACAW,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAK0B,cAAY,EAAAvC,SAAC,qBACtCV,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACC,QAAQ,KAAKrB,GAAI,CAAEgD,UAAW,QAAS/B,eAAgB,YAAc8B,cAAY,EAAAvC,SAAA,CAAC,mBAC3E7F,EAAef,cAAgBe,EAAef,cAAgB,iBAGnFuH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,CAACjD,GAAI,CAAEkD,UAAW,KAAM1C,UACrCV,EAAAA,EAAAA,MAACqD,EAAAA,EAAK,CAACC,KAAK,QAAO5C,SAAA,EACjBW,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CAAA7C,UACRV,EAAAA,EAAAA,MAACwD,EAAAA,EAAQ,CAAA9C,SAAA,EACPW,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACtD,MAAO,SAASO,SAAC,eAC5BW,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACtD,MAAO,QAAQO,SAAC,cAC3BW,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACtD,MAAO,SAASO,SAAC,gBAC5BW,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACtD,MAAO,QAAQO,SAAC,WAC3BW,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACtD,MAAO,QAAQO,SAAC,SAC3BW,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACtD,MAAO,QAAQO,SAAC,cAC3BW,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACtD,MAAO,QAAQO,SAAC,YAC3BW,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAAA/C,SAAC,iBAGfW,EAAAA,EAAAA,KAACqC,EAAAA,EAAS,CAAAhD,SACPtF,EAAMmC,IAAI,CAACC,EAAMe,KAChByB,EAAAA,EAAAA,MAACwD,EAAAA,EAAQ,CAAA9C,SAAA,EACPV,EAAAA,EAAAA,MAACyD,EAAAA,EAAS,CAACvD,GAAI,CAAEyD,SAAU,YAAajD,SAAA,EACtCW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRG,WAAS,EACT/D,MAAOZ,EAAKlC,SACZ4G,SAAUhE,GAAKI,GAAiBC,EAAK,WAAYL,EAAEC,OAAOC,OAC1DwF,YAAY,YACZN,KAAK,QACLlB,UAAQ,EACRE,aAAa,MACbuB,WAAY,CACVC,aAActG,EAAKlC,WACjB+F,EAAAA,EAAAA,KAAC0C,EAAAA,EAAU,CACTT,KAAK,QACL5B,QAASA,IAAMpD,GAAiBC,EAAK,WAAY,IACjDyF,KAAK,MACL,aAAW,QAAOtD,UAElBW,EAAAA,EAAAA,KAAC4C,EAAAA,EAAS,CAACC,SAAS,aAI1BC,UAAWjG,IACL/B,EAAgBoC,IAAQpC,EAAgBoC,GAAK6F,OAAS,IAC1C,cAAVlG,EAAEmG,KACJnG,EAAEoG,iBACFhI,EAAyB+C,IAAI,IACxBA,EACH,CAACd,QAAoBe,IAAdD,EAAKd,IAAsBc,EAAKd,KAASpC,EAAgBoC,GAAK6F,OAAS,EAC1E,EACA/E,EAAKd,GAAO,MAEC,YAAVL,EAAEmG,KACXnG,EAAEoG,iBACFhI,EAAyB+C,IAAI,IACxBA,EACH,CAACd,GAAOc,EAAKd,IAAsB,IAAdc,EAAKd,GAEtBc,EAAKd,GAAO,EADZpC,EAAgBoC,GAAK6F,OAAS,MAGjB,QAAVlG,EAAEmG,KAA2B,UAAVnG,EAAEmG,UACK/E,IAA/BjD,EAAsBkC,IAAsBpC,EAAgBoC,GAAKlC,EAAsBkC,MACzFL,EAAEoG,iBACF9E,GAAsBjB,EAAKpC,EAAgBoC,GAAKlC,EAAsBkC,KACtEjC,EAAyB+C,IAAI,IAAUA,EAAM,CAACd,QAAMe,UAM7DnD,EAAgBoC,IAAQpC,EAAgBoC,GAAK6F,OAAS,IACrD/C,EAAAA,EAAAA,KAACpB,EAAAA,EAAG,CACFkC,WAAS,EACTjC,GAAI,CACFyD,SAAU,WACVY,OAAQ,GACR1D,WAAY,OACZG,UAAW,EACXD,aAAc,EACdR,GAAI,EACJJ,MAAO,OACPqE,UAAW,IACXC,UAAW,QACX/D,SAEDvE,EAAgBoC,GAAKhB,IAAI,CAAC4B,EAAYuF,KACrCrD,EAAAA,EAAAA,KAACpB,EAAAA,EAAG,CAEFC,GAAI,CACFyE,GAAI,EACJC,GAAI,EACJC,OAAQ,UACR/B,aAAc,iBACdE,gBAAiB3G,EAAsBkC,KAASmG,EAAO,UAAY,OACnE,UAAW,CAAE1B,gBAAiB,YAEhC8B,aAAcA,IAAMxI,EAAyB+C,IAAI,IAAUA,EAAM,CAACd,GAAMmG,KACxEK,aAAcA,IAAMzI,EAAyB+C,IAAI,IAAUA,EAAM,CAACd,QAAMe,KACxEoC,QAASA,KACPlC,GAAsBjB,EAAKY,GAC3B7C,EAAyB+C,IAAI,IAAUA,EAAM,CAACd,QAAMe,MACpDoB,SAEDvB,EAAWzE,MAhBPyE,EAAWO,KAAOgF,UAsBjCrD,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAAA/C,UACRW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRG,WAAS,EACTK,KAAK,OACLpE,MAAOZ,EAAKjC,SACZ2G,SAAUhE,GAAKI,GAAiBC,EAAK,WAAYL,EAAEC,OAAOC,OAC1DkF,KAAK,QACLjB,WAAY,CAAE2C,IAAK,EAAG1C,aAAc,OACpCF,UAAQ,OAGZf,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAAA/C,UACRW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRG,WAAS,EACTK,KAAK,OACLpE,MAC4B,kBAAnBZ,EAAKhC,WAA6C,OAAnBgC,EAAKhC,WAAsB,mBAAoBgC,EAAKhC,UACtFgC,EAAKhC,UAAUqD,eACfrB,EAAKhC,UAEX0G,SAAUhE,GAAKI,GAAiBC,EAAK,YAAaL,EAAEC,OAAOC,OAC3DkF,KAAK,QACLjB,WAAY,CAAE2C,IAAK,EAAG1C,aAAc,OACpCF,UAAQ,OAGZf,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAAA/C,UACRW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRG,WAAS,EACTK,KAAK,OACLpE,MAAOZ,EAAK/B,WACZyG,SAAUhE,GAAKI,GAAiBC,EAAK,aAAcL,EAAEC,OAAOC,OAC5DkF,KAAK,QACLjB,WAAY,CAAE2C,IAAK,EAAG1C,aAAc,YAGxCjB,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAAA/C,UACRW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRG,WAAS,EACTK,KAAK,OACLpE,MAAOZ,EAAK9B,IACZwG,SAAUhE,GAAKI,GAAiBC,EAAK,MAAOL,EAAEC,OAAOC,OACrDkF,KAAK,QACLjB,WAAY,CAAE2C,IAAK,EAAG1C,aAAc,YAGxCjB,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAAA/C,UACRW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRG,WAAS,EACTK,KAAK,OACLpE,MAAOZ,EAAK5B,SACZsG,SAAUhE,GAAKI,GAAiBC,EAAK,WAAYL,EAAEC,OAAOC,OAC1DkF,KAAK,QACLjB,WAAY,CAAE2C,IAAK,EAAG1C,aAAc,YAGxCjB,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAAA/C,UACRW,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAZ,SAAElD,EAAK7B,OAAOqD,QAAQ,QAEnCgB,EAAAA,EAAAA,MAACyD,EAAAA,EAAS,CAAA/C,SAAA,EACRW,EAAAA,EAAAA,KAAC0C,EAAAA,EAAU,CAACjD,MAAM,QAAQY,QAASA,IAvb3BnD,KACxBlD,EAASD,EAAM8D,OAAO,CAAC+F,EAAGvG,IAAMA,IAAMH,KAsbmB2G,CAAiB3G,GAAM4G,SAA2B,IAAjB/J,EAAMgJ,OAAa1D,UAC3FW,EAAAA,EAAAA,KAAC+D,EAAAA,EAAgB,MAElB7G,IAAQnD,EAAMgJ,OAAS,IACtB/C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAU,CAACjD,MAAM,UAAUY,QAASnC,GAAcmB,UACjDW,EAAAA,EAAAA,KAACgE,EAAAA,EAAa,WA1JP9G,eAsKzByB,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACT,GAAI,CACTM,EAAG,EACHI,GAAI,EACJG,aAAc,EACdC,UAAW,EACXH,WAAY,mDACZC,MAAO,QACPJ,SAAA,EACAW,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAK0B,cAAY,EAAAvC,SAAC,qBACtCV,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPoF,SAAU,EACVrE,QAAS,OACTG,cAAe,CAAEhB,GAAI,SAAUC,GAAI,OACnCa,WAAY,CAAEd,GAAI,aAAcC,GAAI,UACpCc,eAAgB,gBAChBhB,MAAO,OACP0C,IAAK,GACLnC,SAAA,EACAV,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAS,SAAA,EACFV,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACC,QAAQ,YAAWb,SAAA,CAAC,kBAChBV,EAAAA,EAAAA,MAAA,KAAAU,SAAA,CAAG,SAAEf,GAAYX,QAAQ,UAEzCgB,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACC,QAAQ,YAAWb,SAAA,CAAC,eACnBV,EAAAA,EAAAA,MAAA,KAAAU,SAAA,CAAG,SAAEZ,GAAWyF,WAAWzF,IAAUd,QAAQ,GAAK,SAE/DgB,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACC,QAAQ,YAAWb,SAAA,CAAC,oBACdV,EAAAA,EAAAA,MAAA,KAAAU,SAAA,CAAG,SAAEX,GAAcf,QAAQ,UAE7CgB,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACC,QAAQ,YAAYrB,GAAI,CAAEK,GAAI,GAAIG,SAAA,CAAC,cACnCV,EAAAA,EAAAA,MAAA,KAAAU,SAAA,CAAIlI,EAAcM,KAAKC,MAAM4G,GAAcG,KAAW,yBAGpEE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPe,QAAS,OACTG,cAAe,CAAEhB,GAAI,SAAUC,GAAI,OACnCwC,IAAK,EACL3B,WAAY,WACZf,MAAO,CAAEC,GAAI,OAAQC,GAAI,SACzBK,SAAA,EACAW,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRC,MAAM,SACN7D,MAAOvC,EACPqG,SAAUhE,GAAKpC,EAAUoC,EAAEC,OAAOC,OAClC+D,WAAS,EACTqD,WAAS,EACTC,KAAM,EACNvF,GAAI,CAAEwF,SAAU,IAAK7E,WAAY,OAAQE,aAAc,GACvDsB,WAAY,CAAEC,aAAc,UAE9BjB,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRC,MAAM,iBACN7D,MAAOrC,EACPmG,SAAUhE,GAAKlC,EAAiBkC,EAAEC,OAAOC,OACzC+D,WAAS,EACTqD,WAAS,EACTC,KAAM,EACNvF,GAAI,CAAEwF,SAAU,IAAK7E,WAAY,OAAQE,aAAc,GACvDsB,WAAY,CAAEC,aAAc,UAE9BjB,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRO,QAAM,EACNN,MAAM,iBACNvH,KAAK,gBACL0D,MAAOnC,EACPiG,SAAWhE,GAAMhC,EAAiBgC,EAAEC,OAAOC,OAC3C+D,WAAS,EACTC,UAAQ,EACRlC,GAAI,CAAEwF,SAAU,IAAK7E,WAAY,OAAQE,aAAc,GACvDsB,WAAY,CAAEC,aAAc,OAAQ5B,SAEnC9G,GAAeA,EAAY2D,IAAKoI,IAC/BtE,EAAAA,EAAAA,KAACoB,EAAAA,EAAQ,CAA2BrE,MAAa,OAANuH,QAAM,IAANA,OAAM,EAANA,EAAQ/L,YAAY8G,SAAQ,OAANiF,QAAM,IAANA,OAAM,EAANA,EAAQ/L,aAApD,OAAN+L,QAAM,IAANA,OAAM,EAANA,EAAQ/L,uBAK/ByH,EAAAA,EAAAA,KAACuE,EAAAA,EAAO,CAAC1F,GAAI,CAAE2F,GAAI,EAAGC,YAAa,4BACnCzE,EAAAA,EAAAA,KAACpB,EAAAA,EAAG,CAACC,GAAI,CAAEe,QAAS,OAAQE,eAAgB,YAAaT,UACvDW,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACe,KAAK,SAASjB,QAAQ,YAAYT,MAAM,YAAYwC,KAAK,QAC/D5B,QA9dYxD,IACpBA,EAAEoG,iBACF,MAAMyB,EAAO,CACXC,GAAIzM,EACJyD,OAAQ1C,EAASG,WACjB2C,MAAoB,OAAdvC,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,cAAe,GACrC2C,QAAS7B,EACThB,eAAgBO,EAAMmC,IAAIC,IAAI,CAC5BzD,aAAcyD,EAAKzD,aAAeyD,EAAKzD,aAAe,GACtDW,KAAM8C,EAAKlC,SACXC,SAAUiC,EAAKjC,SACfC,UAAWgC,EAAKhC,UAChBiC,WAAYD,EAAK7B,OACjBD,IAAK8B,EAAK9B,KAAO,EACjBE,SAAU4B,EAAK5B,UAAY,KAE7BqB,aAAc3C,EAASI,KACvBwC,gBAAiB5C,EAASK,QAC1BwC,cAAe7C,EAASM,QACxBmB,cAAeA,EACfsB,SAAUxC,EAAef,cACzBmM,cAAe,OAAOhL,KAAKiL,QAC3B5I,YAAazC,EAAeG,aAAe,IAAIC,KAC/CkL,QAAS,IAAIlL,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOoL,UAAY,KAC5D1G,YAAaA,GACb2G,UAAWlL,EAAMwE,OAAO,CAACC,EAAKrC,IAASqC,GAAO0F,WAAW/H,EAAK9B,MAAQ,GAAI,GAC1E6K,eAAgBnL,EAAMwE,OAAO,CAACC,EAAKrC,IAASqC,GAAO0F,WAAW/H,EAAK5B,WAAa,GAAI,GACpF4K,YAAa7G,GAAcvE,EAAMwE,OAAO,CAACC,EAAKrC,IAASqC,GAAO0F,WAAW/H,EAAK9B,MAAQ,GAAI,GAAKN,EAAMwE,OAAO,CAACC,EAAKrC,IAASqC,GAAO0F,WAAW/H,EAAK5B,WAAa,GAAI,GACnK6K,SAAU,MACVC,cAAe,UACfC,YAAa,IAAI1L,KACjB2L,iBAAkB,GAClBjJ,qBAAsB1B,GAExBjC,GAAS6M,EAAAA,EAAAA,IAAcd,IAAOpJ,KAAMC,IAC9BA,EAAIC,MACNC,QAAQD,MAAM,+BAAgCD,EAAIC,OAGlDiK,WAAW,KACTvK,GAASoF,EAAAA,EAAWC,aACnB,OAEJhE,MAAOf,IACRC,QAAQD,MAAM,6BAA8BA,MAmbtCqD,GAAI,CACFsB,WAAY,IACZ0C,SAAU,GACVrD,WAAY,mDACZC,MAAO,OACPE,UAAW,EACX,UAAW,CACTH,WAAY,qDAEdH,SAAC,2B,sDCnsBR,MA8CMqG,EAAmBC,GACnB,6BACDC,KAAKC,OAAOF,GAAO5H,eAMlB+H,EAAsBC,GAEtB,uEACDH,KAAKC,OAAOE,IAEX/M,EAAcA,IACjBgN,OAAOC,YAAcC,SAASC,gBAAgBC,aAAeF,SAASG,KAAKD,W","sources":["app/billing/editBilling.jsx","utills/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box, Typography, Button, Paper, Grid, TextField, MenuItem, Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow, IconButton, Divider\n} from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { formatDate, windowWidth } from '../../utills';\nimport { fetchBillingCategories } from '../redux/billingCategorySlice';\nimport { fetchPaymentType } from '../redux/paymentTypeSlice';\nimport { fetchFinancialYear } from '../redux/financialYearSlice';\nimport { fetchBillingItems } from '../redux/billingItemsSlice';\nimport { updateBilling, fetchBillingById } from '../redux/billingSlice';\nimport { routesName } from '../constants/routesName';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nfunction numberToWords(num) {\n  if (num === 0) return 'Zero';\n  if (typeof num !== 'number') num = Number(num);\n  const a = [\n    '', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten',\n    'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n  ];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n\n  const crore = Math.floor(num / 10000000);\n  const lakh = Math.floor((num % 10000000) / 100000);\n  const thousand = Math.floor((num % 100000) / 1000);\n  const hundred = Math.floor((num % 1000) / 100);\n  const rest = num % 100;\n\n  let result = '';\n  if (crore) result += numberToWords(crore) + ' Crore ';\n  if (lakh) result += numberToWords(lakh) + ' Lakh ';\n  if (thousand) result += numberToWords(thousand) + ' Thousand ';\n  if (hundred) result += a[hundred] + ' Hundred ';\n  if (rest) {\n    if (result !== '') result += 'and ';\n    if (rest < 20) result += a[rest];\n    else result += b[Math.floor(rest / 10)] + (rest % 10 ? ' ' + a[rest % 10] : '');\n  }\n  return result.trim();\n}\n\nconst EditBilling = () => {\n  const billingId = useParams().billingId;\n  const { billingCategory } = useSelector((state) => state.billingCategory);\n  const { paymentType } = useSelector((state) => state.paymentType);\n  const { financialYears } = useSelector((state) => state.financialYear);\n  const { billingItems } = useSelector((state) => state.billingItems);\n  const dispatch = useDispatch();\n  const { billingData } = useSelector((state) => state.billing);\n  const screenwidth = windowWidth();\n\n  // States\n  const [customer, setCustomer] = useState({\n    customerId: '',\n    name: '',\n    address: '',\n    contact: '',\n  });\n  const [billingDetails, setBillingDetails] = useState({\n    billingType: '',\n    financialYear: '',\n    billingDate: new Date().toISOString().split('T')[0],\n  });\n  const [items, setItems] = useState([\n    { billingItems:'', itemName: '', quantity: 1, unitPrice: 0, taxPercent: 0, tax: 0, amount: 0, discount: 0 }\n  ]);\n  const [remark, setRemark] = useState('');\n  const [customerNotes, setCustomerNotes ] = useState('');\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [itemSuggestions, setItemSuggestions] = useState({});\n  const [highlightedSuggestion, setHighlightedSuggestion] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    dispatch(fetchBillingById(billingId)).then((res) => {\n      if (res.error) {\n        console.error('Error fetching billing data:', res.error);\n        return;\n      }\n      setCustomer({\n        customerId: res.payload.userId,\n        name: res.payload.customerName || '',\n        address: res.payload.customerAddress || '',\n        contact: res.payload.customerPhone || '',\n      });\n      setBillingDetails({\n        billingType: res.payload.plan || '',\n        financialYear: res.payload.category || '',\n        billingDate: res.payload.invoiceDate ? new Date(res.payload.invoiceDate).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\n      });\n      setItems(res.payload.billingDetails.map(item => ({\n        billingItems: item.billingItems || '',\n        itemName: item.name || '',\n        quantity: item.quantity || 1,\n        unitPrice: item.unitPrice || 0,\n        taxPercent: item.taxPercent || 0,\n        tax: item.tax || 0,\n        amount: item.totalPrice || 0,\n        discount: item.discount || 0,\n      })));\n      setRemark(res.payload.details || '');\n      setCustomerNotes(res.payload.customerNotes || '');\n      setPaymentMethod(res.payload.paymentMethodDetails || '');\n      setItemSuggestions({});\n      setHighlightedSuggestion({});\n    }).catch((error) => {\n      console.error('Error fetching billing data:', error);\n    });\n    dispatch(fetchBillingCategories());\n    dispatch(fetchPaymentType());\n    dispatch(fetchFinancialYear());\n    dispatch(fetchBillingItems());\n  }, [dispatch, billingId]);\n\n  // Handlers\n  const handleCustomerChange = (e) => {\n    setCustomer({ ...customer, [e.target.name]: e.target.value });\n  };\n  const handleBillingDetailsChange = (e) => {\n    setBillingDetails({ ...billingDetails, [e.target.name]: e.target.value });\n  };\n  const handleItemChange = (idx, field, value) => {\n    const newItemsArr = items.map((item, i) => {\n      if (i !== idx) return item;\n      const getNumber = v =>\n        typeof v === 'object' && v !== null && '$numberDecimal' in v\n          ? Number(v.$numberDecimal)\n          : Number(v) || 0;\n      let updated = { ...item, [field]: ['quantity', 'unitPrice', 'discount', 'taxPercent', 'tax'].includes(field) ? getNumber(value) : value };\n      updated.unitPrice = getNumber(updated.unitPrice);\n      updated.quantity = getNumber(updated.quantity);\n      updated.discount = getNumber(updated.discount);\n      updated.taxPercent = getNumber(updated.taxPercent);\n      updated.tax = getNumber(updated.tax);\n      if (field === 'taxPercent' || field === 'unitPrice' || field === 'quantity') {\n        updated.tax = ((updated.unitPrice * updated.quantity * updated.taxPercent) / 100).toFixed(2);\n      }\n      if (field === 'tax') {\n        updated.taxPercent = updated.unitPrice && updated.quantity\n          ? ((updated.tax * 100) / (updated.unitPrice * updated.quantity)).toFixed(2) \n          : 0;\n      }\n      updated.amount = updated.unitPrice * updated.quantity + Number(updated.tax) - updated.discount;\n      return updated;\n    });\n    setItems(newItemsArr);\n    if (field === 'itemName') {\n      const filtered = billingItems && billingItems\n        .filter((suggestion) =>\n          suggestion.name.toLowerCase().includes(value.toLowerCase())\n        );\n      setItemSuggestions((prev) => ({ ...prev, [idx]: filtered }));\n      setHighlightedSuggestion(prev => ({ ...prev, [idx]: undefined }));\n    }\n  };\n  const handleAddItem = () => {\n    setItems([...items, {billingItems:'', itemName: '', quantity: 1, unitPrice: 0, taxPercent: 0, tax: 0, amount: 0, discount: 0 }]);\n  };\n  const handleRemoveItem = (idx) => {\n    setItems(items.filter((_, i) => i !== idx));\n  };\n  const handleSuggestionClick = (idx, suggestion) => {\n    const getNumber = v =>\n      typeof v === 'object' && v !== null && '$numberDecimal' in v\n        ? Number(v.$numberDecimal)\n        : Number(v) || 0;\n    const newItemsArr = items.map((item, i) => {\n      if (i !== idx) return item;\n      const unitPrice = getNumber(suggestion.unitPrice);\n      const quantity = getNumber(suggestion.quantity) || 1;\n      const taxPercent = getNumber(suggestion.taxPercent || suggestion.tax_percent || 0);\n      let tax = getNumber(suggestion.tax);\n      if (taxPercent) {\n        tax = (unitPrice * quantity * taxPercent) / 100;\n      }\n      const discount = getNumber(suggestion.discount);\n      const amount = unitPrice * quantity + tax - discount;\n      return {\n        ...item,\n        billingItems: suggestion._id,\n        itemName: suggestion.name,\n        quantity,\n        unitPrice,\n        taxPercent,\n        tax,\n        discount,\n        amount,\n      };\n    });\n    setItems(newItemsArr);\n    setItemSuggestions((prev) => ({ ...prev, [idx]: [] }));\n  };\n\n  // Billing Summary\n  const totalAmount = items.reduce((sum, item) => sum + item.amount, 0);\n  const totalTax = items.reduce((sum, item) => {\n    let tax = item.tax;\n    if (typeof tax === 'object' && tax !== null && '$numberDecimal' in tax) {\n      tax = Number(tax.$numberDecimal);\n    } else {\n      tax = Number(tax) || 0;\n    }\n    return sum + tax;\n  }, 0);\n  const totalDiscount = items.reduce((sum, item) => {\n    let discount = item.discount;\n    if (typeof discount === 'object' && discount !== null && '$numberDecimal' in discount) {\n      discount = Number(discount.$numberDecimal);\n    } else {\n      discount = Number(discount) || 0;\n    }\n    return sum + discount;\n  }, 0);\n\n  // Submit Handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      id: billingId,\n      userId: customer.customerId,\n      plan: billingDetails?.billingType || '',\n      details: remark,\n      billingDetails: items.map(item => ({\n        billingItems: item.billingItems ? item.billingItems : '',\n        name: item.itemName,\n        quantity: item.quantity,\n        unitPrice: item.unitPrice,\n        totalPrice: item.amount, \n        tax: item.tax || 0,\n        discount: item.discount || 0,\n      })),\n      customerName: customer.name,\n      customerAddress: customer.address,\n      customerPhone: customer.contact,\n      customerNotes: customerNotes,\n      category: billingDetails.financialYear,\n      invoiceNumber: `INV-${Date.now()}`,\n      invoiceDate: billingDetails.billingDate || new Date(),\n      dueDate: new Date(new Date().setDate(new Date().getDate() + 30)),\n      totalAmount: totalAmount,\n      taxAmount: items.reduce((sum, item) => sum + (parseFloat(item.tax) || 0), 0),\n      discountAmount: items.reduce((sum, item) => sum + (parseFloat(item.discount) || 0), 0),\n      finalAmount: totalAmount + items.reduce((sum, item) => sum + (parseFloat(item.tax) || 0), 0) - items.reduce((sum, item) => sum + (parseFloat(item.discount) || 0), 0),\n      currency: 'INR',\n      paymentStatus: 'Pending',\n      paymentDate: new Date(),\n      paymentReference: '',\n      paymentMethodDetails: paymentMethod,\n    };\n    dispatch(updateBilling(data)).then((res) => {\n      if (res.error) {\n        console.error('Error updating billing item:', res.error);\n        return;\n      } else {\n        setTimeout(() => {\n          navigate(routesName.LISTBILLIS);\n        }, 1000); \n      }\n    }).catch((error) => {\n      console.error('Error adding billing item:', error);\n    }); \n  };\n\n  return (\n    <Box sx={{\n      width: { xs: '100%', md: (screenwidth - 240) + 'px' },\n      mx: 'auto',\n      mt: 3,\n      p: { xs: 1, sm: 2 }\n    }}>\n      {/* Header */}\n      <Paper sx={{\n        p: 3,\n        mb: 3,\n        background: 'linear-gradient(90deg, #43cea2 0%, #185a9d 100%)',\n        color: '#fff',\n        borderRadius: 3,\n        boxShadow: 4,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexDirection: { xs: 'column', md: 'row' }\n      }}>\n        <Typography variant=\"h5\" fontWeight=\"bold\">\n          Edit Billing Information\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          sx={{\n            fontWeight: 700,\n            background: 'linear-gradient(90deg, #ff9966 0%, #ff5e62 100%)',\n            color: '#fff',\n            boxShadow: 2,\n            mt: { xs: 2, md: 0 },\n            '&:hover': {\n              background: 'linear-gradient(90deg, #ff5e62 0%, #ff9966 100%)',\n            },\n          }}\n          onClick={() => navigate(routesName.LISTBILLIS)}\n        >\n          Search Billings\n        </Button>\n      </Paper>\n\n      {/* Customer Info Section */}\n      <Paper sx={{\n        mb: 3,\n        p: 3,\n        borderRadius: 3,\n        boxShadow: 2,\n        background: 'rgba(255,255,255,0.97)'\n      }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={3}>\n            <TextField\n              label=\"Customer ID\"\n              name=\"customerId\"\n              value={customer.customerId}\n              onChange={handleCustomerChange}\n              fullWidth\n              required\n              inputProps={{ autoComplete: 'off' }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <TextField\n              label=\"Name\"\n              name=\"name\"\n              value={customer.name}\n              onChange={handleCustomerChange}\n              fullWidth\n              required\n              inputProps={{ autoComplete: 'off' }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <TextField\n              label=\"Address\"\n              name=\"address\"\n              value={customer.address}\n              onChange={handleCustomerChange}\n              fullWidth\n              required\n              inputProps={{ autoComplete: 'off' }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <TextField\n              label=\"Contact\"\n              name=\"contact\"\n              value={customer.contact}\n              onChange={handleCustomerChange}\n              fullWidth\n              required\n              inputProps={{ autoComplete: 'off' }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              select\n              label=\"Billing Type\"\n              name=\"billingType\"\n              value={billingDetails.billingType}\n              onChange={handleBillingDetailsChange}\n              fullWidth\n              required\n              sx={{ width: 180 }}\n              inputProps={{ autoComplete: 'off' }}\n            >\n              {billingCategory && billingCategory.map((type) => (\n                <MenuItem key={type} value={type?.name}>{type?.name}</MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              select\n              label=\"Financial Year\"\n              name=\"financialYear\"\n              value={billingDetails.financialYear ? billingDetails.financialYear : '2025-26'}\n              onChange={handleBillingDetailsChange}\n              fullWidth\n              required\n              sx={{ width: 180 }}\n              inputProps={{ autoComplete: 'off' }}\n            >\n              {financialYears && financialYears.map((year) => (\n                <MenuItem key={year?._id} value={year?.name}>{year?.name}</MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              label=\"Billing Date\"\n              name=\"billingDate\"\n              type=\"date\"\n              value={billingDetails.billingDate}\n              onChange={handleBillingDetailsChange}\n              fullWidth\n              InputLabelProps={{ shrink: true }}\n              required\n              inputProps={{ autoComplete: 'off' }}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Billing Items Section */}\n      <Paper sx={{\n        p: 2,\n        mb: 3,\n        borderRadius: 3,\n        boxShadow: 2,\n        background: 'rgba(255,255,255,0.97)'\n      }}>\n        <Box sx={{\n          display: 'flex',\n          flexDirection: { xs: 'column', md: 'row' },\n          gap: 2,\n          alignItems: { xs: 'flex-start', md: 'center' },\n          justifyContent: 'space-between',\n          borderBottom: '1px solid #CECECE',\n          padding: '10px',\n          mb: 2,\n          backgroundColor: '#f5f5f5'\n        }}>\n          <Typography variant=\"h6\" gutterBottom>Billing Details</Typography>\n          <Typography variant=\"h6\" sx={{ textAlign: 'right', justifyContent: 'flex-end' }} gutterBottom>\n            Financial Year: {billingDetails.financialYear ? billingDetails.financialYear : '2025-26'}\n          </Typography>\n        </Box>\n        <TableContainer sx={{ minHeight: 300 }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell width={'450rem'}>Item Name</TableCell>\n                <TableCell width={'60rem'}>Quantity</TableCell>\n                <TableCell width={'120rem'}>Unit Price</TableCell>\n                <TableCell width={'80rem'}>Tax %</TableCell>\n                <TableCell width={'80rem'}>Tax</TableCell>\n                <TableCell width={'80rem'}>Discount</TableCell>\n                <TableCell width={'60rem'}>Amount</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.map((item, idx) => (\n                <TableRow key={idx}>\n                  <TableCell sx={{ position: 'relative' }}>\n                    <TextField\n                      fullWidth\n                      value={item.itemName}\n                      onChange={e => handleItemChange(idx, 'itemName', e.target.value)}\n                      placeholder=\"Item Name\"\n                      size=\"small\"\n                      required\n                      autoComplete=\"off\"\n                      InputProps={{\n                        endAdornment: item.itemName && (\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => handleItemChange(idx, 'itemName', '')}\n                            edge=\"end\"\n                            aria-label=\"clear\"\n                          >\n                            <ClearIcon fontSize=\"small\" />\n                          </IconButton>\n                        ),\n                      }}\n                      onKeyDown={e => {\n                        if (itemSuggestions[idx] && itemSuggestions[idx].length > 0) {\n                          if (e.key === 'ArrowDown') {\n                            e.preventDefault();\n                            setHighlightedSuggestion(prev => ({\n                              ...prev,\n                              [idx]: prev[idx] === undefined || prev[idx] === itemSuggestions[idx].length - 1\n                                ? 0\n                                : prev[idx] + 1\n                            }));\n                          } else if (e.key === 'ArrowUp') {\n                            e.preventDefault();\n                            setHighlightedSuggestion(prev => ({\n                              ...prev,\n                              [idx]: !prev[idx] || prev[idx] === 0\n                                ? itemSuggestions[idx].length - 1\n                                : prev[idx] - 1\n                            }));\n                          } else if (e.key === 'Tab' || e.key === 'Enter') {\n                            if (highlightedSuggestion[idx] !== undefined && itemSuggestions[idx][highlightedSuggestion[idx]]) {\n                              e.preventDefault();\n                              handleSuggestionClick(idx, itemSuggestions[idx][highlightedSuggestion[idx]]);\n                              setHighlightedSuggestion(prev => ({ ...prev, [idx]: undefined }));\n                            }\n                          }\n                        }\n                      }}\n                    />\n                    {itemSuggestions[idx] && itemSuggestions[idx].length > 0 && (\n                      <Box\n                        fullWidth\n                        sx={{\n                          position: 'absolute',\n                          zIndex: 10,\n                          background: '#fff',\n                          boxShadow: 2,\n                          borderRadius: 1,\n                          mt: 1,\n                          width: '100%',\n                          maxHeight: 180,\n                          overflowY: 'auto',\n                        }}\n                      >\n                        {itemSuggestions[idx].map((suggestion, sIdx) => (\n                          <Box\n                            key={suggestion._id || sIdx}\n                            sx={{\n                              px: 2,\n                              py: 1,\n                              cursor: 'pointer',\n                              borderBottom: '1px solid #eee',\n                              backgroundColor: highlightedSuggestion[idx] === sIdx ? '#e3f2fd' : '#fff',\n                              '&:hover': { backgroundColor: '#f0f0f0' },\n                            }}\n                            onMouseEnter={() => setHighlightedSuggestion(prev => ({ ...prev, [idx]: sIdx }))}\n                            onMouseLeave={() => setHighlightedSuggestion(prev => ({ ...prev, [idx]: undefined }))}\n                            onClick={() => {\n                              handleSuggestionClick(idx, suggestion);\n                              setHighlightedSuggestion(prev => ({ ...prev, [idx]: undefined }));\n                            }}\n                          >\n                            {suggestion.name}\n                          </Box>\n                        ))}\n                      </Box>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      fullWidth\n                      type=\"text\"\n                      value={item.quantity}\n                      onChange={e => handleItemChange(idx, 'quantity', e.target.value)}\n                      size=\"small\"\n                      inputProps={{ min: 1, autoComplete: 'off' }}\n                      required\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      fullWidth\n                      type=\"text\"\n                      value={\n                        typeof item.unitPrice === 'object' && item.unitPrice !== null && '$numberDecimal' in item.unitPrice\n                          ? item.unitPrice.$numberDecimal\n                          : item.unitPrice\n                      }\n                      onChange={e => handleItemChange(idx, 'unitPrice', e.target.value)}\n                      size=\"small\"\n                      inputProps={{ min: 0, autoComplete: 'off' }}\n                      required\n                    />\n                  </TableCell> \n                  <TableCell>\n                    <TextField\n                      fullWidth\n                      type=\"text\"\n                      value={item.taxPercent}\n                      onChange={e => handleItemChange(idx, 'taxPercent', e.target.value)}\n                      size=\"small\"\n                      inputProps={{ min: 0, autoComplete: 'off' }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      fullWidth\n                      type=\"text\"\n                      value={item.tax}\n                      onChange={e => handleItemChange(idx, 'tax', e.target.value)}\n                      size=\"small\"\n                      inputProps={{ min: 0, autoComplete: 'off' }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      fullWidth\n                      type=\"text\"\n                      value={item.discount}\n                      onChange={e => handleItemChange(idx, 'discount', e.target.value)}\n                      size=\"small\"\n                      inputProps={{ min: 0, autoComplete: 'off' }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography>{item.amount.toFixed(2)}</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <IconButton color=\"error\" onClick={() => handleRemoveItem(idx)} disabled={items.length === 1}>\n                      <RemoveCircleIcon />\n                    </IconButton>\n                    {idx === items.length - 1 && (\n                      <IconButton color=\"primary\" onClick={handleAddItem}>\n                        <AddCircleIcon />\n                      </IconButton>\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n\n      {/* Billing Summary Section */}\n      <Paper sx={{\n        p: 3,\n        mb: 3,\n        borderRadius: 3,\n        boxShadow: 2,\n        background: 'linear-gradient(90deg, #43cea2 0%, #185a9d 100%)',\n        color: '#fff'\n      }}>\n        <Typography variant=\"h6\" gutterBottom>Billing Summary</Typography>\n        <Box sx={{\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: { xs: 'column', md: 'row' },\n          alignItems: { xs: 'flex-start', md: 'center' },\n          justifyContent: 'space-between',\n          width: '100%',\n          gap: 2\n        }}>\n          <Box>\n            <Typography variant=\"subtitle1\">\n              Total Amount: <b>₹{totalAmount.toFixed(2)}</b>\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              Total Tax: <b>₹{totalTax ? parseFloat(totalTax).toFixed(2) : 0}</b>\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              Total Discount: <b>₹{totalDiscount.toFixed(2)}</b>\n            </Typography>\n            <Typography variant=\"subtitle1\" sx={{ mt: 1 }}>\n              In Words: <i>{numberToWords(Math.floor(totalAmount + totalTax))} Rupees Only</i>\n            </Typography>\n          </Box>\n          <Box sx={{\n            display: 'flex',\n            flexDirection: { xs: 'column', md: 'row' },\n            gap: 2,\n            alignItems: 'flex-end',\n            width: { xs: '100%', md: 'auto' }\n          }}>\n            <TextField\n              label=\"Remark\"\n              value={remark}\n              onChange={e => setRemark(e.target.value)}\n              fullWidth\n              multiline\n              rows={2}\n              sx={{ minWidth: 180, background: '#fff', borderRadius: 1 }}\n              inputProps={{ autoComplete: 'off' }}\n            />\n            <TextField\n              label=\"Customer Notes\"\n              value={customerNotes}\n              onChange={e => setCustomerNotes(e.target.value)}\n              fullWidth\n              multiline\n              rows={2}\n              sx={{ minWidth: 180, background: '#fff', borderRadius: 1 }}\n              inputProps={{ autoComplete: 'off' }}\n            />\n            <TextField\n              select\n              label=\"Payment Method\"\n              name='paymentMethod'\n              value={paymentMethod}\n              onChange={(e) => setPaymentMethod(e.target.value)}\n              fullWidth\n              required\n              sx={{ minWidth: 180, background: '#fff', borderRadius: 1 }}\n              inputProps={{ autoComplete: 'off' }}\n            >\n              {paymentType && paymentType.map((method) => (\n                <MenuItem key={method?.paymentType} value={method?.paymentType}>{method?.paymentType}</MenuItem>\n              ))}\n            </TextField>\n          </Box>\n        </Box>\n        <Divider sx={{ my: 2, borderColor: 'rgba(255,255,255,0.3)' }} />\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"large\"\n            onClick={handleSubmit}\n            sx={{\n              fontWeight: 700,\n              fontSize: 16,\n              background: 'linear-gradient(90deg, #ff9966 0%, #ff5e62 100%)',\n              color: '#fff',\n              boxShadow: 2,\n              '&:hover': {\n                background: 'linear-gradient(90deg, #ff5e62 0%, #ff9966 100%)',\n              },\n            }}>\n            Submit Billing\n          </Button>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default EditBilling;","export const formatDate = (date) => {\n  const options = {  day: 'numeric', month: 'long', year: 'numeric' };\n  return new Date(date).toLocaleDateString(undefined, options);\n}\nexport const formatTime = (time) => {\n  const options = { hour: '2-digit', minute: '2-digit', second: '2-digit' };\n  return new Date(time).toLocaleTimeString(undefined, options);\n}\nexport const formatDateTime = (dateTime) => {\n  const date = formatDate(dateTime);\n  const time = formatTime(dateTime);\n  return `${date} at ${time}`;\n}\n//date to ISO string\nexport const dateToISOString = (date) => {\n  return new Date(date).toISOString();\n}\n//ISO string to date\nexport const isoStringToDate = (isoString) => {\n  return new Date(isoString);\n}\n//date to UTC string\nexport const dateToUTCString = (date) => {\n  return new Date(date).toUTCString();\n}\n//UTC string to date\nexport const utcStringToDate = (utcString) => {\n  return new Date(utcString);\n}\nexport const formatNumber = (number) => {\n  return new Intl.NumberFormat().format(number);\n}\nexport const formatCurrency = (amount, currency = 'USD') => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currency\n  }).format(amount);\n}\nexport const formatPercentage = (value) => {\n  return `${(value * 100).toFixed(2)}%`;\n}\nexport const formatDuration = (seconds) => {    \n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n}   \nexport const checkvalidEmail = (email) => {\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return re.test(String(email).toLowerCase());\n}\nexport const checkvalidPhone = (phone) => {\n  const re = /^\\+?[1-9]\\d{1,14}$/; // E.164 format\n  return re.test(String(phone).toLowerCase());\n}\nexport const checkvalidPassword = (password) => {\n  // At least 8 characters, one uppercase, one lowercase, one number, and one special character\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  return re.test(String(password));\n}\nexport const windowWidth = () => {\n  return  window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n}\n"],"names":["numberToWords","num","Number","a","b","crore","Math","floor","lakh","thousand","hundred","rest","result","trim","EditBilling","billingId","useParams","billingCategory","useSelector","state","paymentType","financialYears","financialYear","billingItems","dispatch","useDispatch","billingData","billing","screenwidth","windowWidth","customer","setCustomer","useState","customerId","name","address","contact","billingDetails","setBillingDetails","billingType","billingDate","Date","toISOString","split","items","setItems","itemName","quantity","unitPrice","taxPercent","tax","amount","discount","remark","setRemark","customerNotes","setCustomerNotes","paymentMethod","setPaymentMethod","itemSuggestions","setItemSuggestions","highlightedSuggestion","setHighlightedSuggestion","navigate","useNavigate","useEffect","fetchBillingById","then","res","error","console","payload","userId","customerName","customerAddress","customerPhone","plan","category","invoiceDate","map","item","totalPrice","details","paymentMethodDetails","catch","fetchBillingCategories","fetchPaymentType","fetchFinancialYear","fetchBillingItems","handleCustomerChange","e","target","value","handleBillingDetailsChange","handleItemChange","idx","field","newItemsArr","i","getNumber","v","$numberDecimal","updated","includes","toFixed","filtered","filter","suggestion","toLowerCase","prev","undefined","handleAddItem","handleSuggestionClick","tax_percent","_id","totalAmount","reduce","sum","totalTax","totalDiscount","_jsxs","Box","sx","width","xs","md","mx","mt","p","sm","children","Paper","mb","background","color","borderRadius","boxShadow","display","alignItems","justifyContent","flexDirection","_jsx","Typography","variant","fontWeight","Button","onClick","routesName","LISTBILLIS","Grid","container","spacing","TextField","label","onChange","fullWidth","required","inputProps","autoComplete","select","type","MenuItem","year","InputLabelProps","shrink","gap","borderBottom","padding","backgroundColor","gutterBottom","textAlign","TableContainer","minHeight","Table","size","TableHead","TableRow","TableCell","TableBody","position","placeholder","InputProps","endAdornment","IconButton","edge","ClearIcon","fontSize","onKeyDown","length","key","preventDefault","zIndex","maxHeight","overflowY","sIdx","px","py","cursor","onMouseEnter","onMouseLeave","min","_","handleRemoveItem","disabled","RemoveCircleIcon","AddCircleIcon","flexGrow","parseFloat","multiline","rows","minWidth","method","Divider","my","borderColor","data","id","invoiceNumber","now","dueDate","setDate","getDate","taxAmount","discountAmount","finalAmount","currency","paymentStatus","paymentDate","paymentReference","updateBilling","setTimeout","checkvalidEmail","email","test","String","checkvalidPassword","password","window","innerWidth","document","documentElement","clientWidth","body"],"sourceRoot":""}