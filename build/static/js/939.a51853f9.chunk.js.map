{"version":3,"file":"static/js/939.a51853f9.chunk.js","mappings":"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","sources":["app/report/SalesReport.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box, Paper, Typography, Grid, TextField, MenuItem, Button, Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow\n} from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSalesReport } from '../redux/reportSlice'; // You need to implement this action\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\nconst dateOptions = [\n  { label: 'All', value: 'all' },\n  { label: 'Last 3 Months', value: '3months' },\n  { label: 'Last 6 Months', value: '6months' },\n  { label: 'Quarter Wise', value: 'quarter' },\n  { label: 'Financial Year', value: 'financialYear' }\n];\n\nconst SalesReport = () => {\n  const dispatch = useDispatch();\n  const { salesReport } = useSelector(state => state.report); // Add this to your redux\n  const [dateFilter, setDateFilter] = useState('all');\n  const [financialYear, setFinancialYear] = useState('');\n  const [quarter, setQuarter] = useState('');\n  const [customRange, setCustomRange] = useState({ from: null, to: null });\n\n  useEffect(() => {\n    // Dispatch with filters\n    dispatch(fetchSalesReport({ dateFilter, financialYear, quarter, customRange }));\n  }, [dispatch, dateFilter, financialYear, quarter, customRange]);\n\n  return (\n    <Box sx={{ p: { xs: 1, sm: 3 } }}>\n      <Paper sx={{ p: 3, mb: 3, borderRadius: 3, boxShadow: 3 }}>\n        <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n          Sales & Tax Report\n        </Typography>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} sm={3}>\n            <TextField\n              select\n              label=\"Date Range\"\n              value={dateFilter}\n              onChange={e => setDateFilter(e.target.value)}\n              fullWidth\n              size=\"small\"\n            >\n              {dateOptions.map(opt => (\n                <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          {dateFilter === 'financialYear' && (\n            <Grid item xs={12} sm={3}>\n              <TextField\n                select\n                label=\"Financial Year\"\n                value={financialYear}\n                onChange={e => setFinancialYear(e.target.value)}\n                fullWidth\n                size=\"small\"\n              >\n                {/* Replace with your actual financial year list */}\n                {['2024-25', '2025-26'].map(fy => (\n                  <MenuItem key={fy} value={fy}>{fy}</MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          )}\n          {dateFilter === 'quarter' && (\n            <Grid item xs={12} sm={3}>\n              <TextField\n                select\n                label=\"Quarter\"\n                value={quarter}\n                onChange={e => setQuarter(e.target.value)}\n                fullWidth\n                size=\"small\"\n              >\n                {['Q1', 'Q2', 'Q3', 'Q4'].map(q => (\n                  <MenuItem key={q} value={q}>{q}</MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          )}\n          {dateFilter === 'custom' && (\n            <>\n              <Grid item xs={12} sm={3}>\n                <DatePicker\n                  label=\"From\"\n                  value={customRange.from}\n                  onChange={date => setCustomRange(r => ({ ...r, from: date }))}\n                  slotProps={{ textField: { fullWidth: true, size: 'small' } }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <DatePicker\n                  label=\"To\"\n                  value={customRange.to}\n                  onChange={date => setCustomRange(r => ({ ...r, to: date }))}\n                  slotProps={{ textField: { fullWidth: true, size: 'small' } }}\n                />\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </Paper>\n      <Paper sx={{ p: 2, borderRadius: 3, boxShadow: 2 }}>\n        <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n          Summary\n        </Typography>\n        <Grid container spacing={2} sx={{ mb: 2 }}>\n          <Grid item xs={12} sm={3}>\n            <Typography>Total Sales: <b>₹{salesReport?.totalSales?.toFixed(2) ?? '0.00'}</b></Typography>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Typography>Total Tax: <b>₹{salesReport?.totalTax?.toFixed(2) ?? '0.00'}</b></Typography>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Typography>Total Discount: <b>₹{salesReport?.totalDiscount?.toFixed(2) ?? '0.00'}</b></Typography>\n          </Grid>\n        </Grid>\n        <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 1 }}>\n          Payment Method Details\n        </Typography>\n        <Grid container spacing={2} sx={{ mb: 2 }}>\n          {salesReport?.paymentMethods && Object.entries(salesReport.paymentMethods).map(([method, amount]) => (\n            <Grid item xs={12} sm={3} key={method}>\n              <Typography>{method}: <b>₹{parseFloat(amount).toFixed(2)}</b></Typography>\n            </Grid>\n          ))}\n        </Grid>\n        <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 1 }}>\n          Tax Collection\n        </Typography>\n        <Grid container spacing={2} sx={{ mb: 2 }}>\n          {salesReport?.taxCollection && Object.entries(salesReport.taxCollection).map(([taxType, amount]) => (\n            <Grid item xs={12} sm={3} key={taxType}>\n              <Typography>{taxType}: <b>₹{parseFloat(amount).toFixed(2)}</b></Typography>\n            </Grid>\n          ))}\n        </Grid>\n        <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 1 }}>\n          Detailed Sales\n        </Typography>\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Date</TableCell>\n                <TableCell>Bill No</TableCell>\n                <TableCell>Customer</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Tax</TableCell>\n                <TableCell>Discount</TableCell>\n                <TableCell>Payment Method</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {salesReport?.details?.map((row, idx) => (\n                <TableRow key={idx}>\n                  <TableCell>{row.date}</TableCell>\n                  <TableCell>{row.billNo}</TableCell>\n                  <TableCell>{row.customerName}</TableCell>\n                  <TableCell>₹{parseFloat(row.amount).toFixed(2)}</TableCell>\n                  <TableCell>₹{parseFloat(row.tax).toFixed(2)}</TableCell>\n                  <TableCell>₹{parseFloat(row.discount).toFixed(2)}</TableCell>\n                  <TableCell>{row.paymentMethod}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SalesReport;"],"names":["dateOptions","label","value","SalesReport","_salesReport$totalSal","_salesReport$totalSal2","_salesReport$totalTax","_salesReport$totalTax2","_salesReport$totalDis","_salesReport$totalDis2","_salesReport$details","dispatch","useDispatch","salesReport","useSelector","state","report","dateFilter","setDateFilter","useState","financialYear","setFinancialYear","quarter","setQuarter","customRange","setCustomRange","from","to","useEffect","fetchSalesReport","_jsxs","Box","sx","p","xs","sm","children","Paper","mb","borderRadius","boxShadow","_jsx","Typography","variant","fontWeight","Grid","container","spacing","alignItems","item","TextField","select","onChange","e","target","fullWidth","size","map","opt","MenuItem","fy","q","_Fragment","DatePicker","date","r","slotProps","textField","totalSales","toFixed","totalTax","totalDiscount","paymentMethods","Object","entries","_ref","method","amount","parseFloat","taxCollection","_ref2","taxType","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","details","row","idx","billNo","customerName","tax","discount","paymentMethod"],"sourceRoot":""}