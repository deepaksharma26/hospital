{"version":3,"file":"static/js/148.81c599a6.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Delete.js","app/billing/billingItem.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Snackbar,\n  Alert,\n  MenuItem\n} from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBillingItem, deleteBillingItem, fetchBillingItems, updateBillingItem } from '../redux/billingItemsSlice';\nimport { fetchBillingCategories } from '../redux/billingCategorySlice';\n\nconst BillingItem = () => {\n  const [items, setItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [form, setForm] = useState({\n    id: '',\n    name: '',\n    description: '',\n    category: '',\n    quantity: 1,\n    unitPrice: '',\n    taxPercent: '',\n    tax: 0,\n    discountPercent: '',\n    discount: 0,\n    finalAmount: 0, // <-- add this\n  });\n  const [editId, setEditId] = useState(null);\n  const [deleteId, setDeleteId] = useState(null);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const { billingCategory } = useSelector((state) => state.billingCategory);\n  const { billingItems } = useSelector((state) => state.billingItems);\n  // Fetch items and categories\n  useEffect(() => {\n    dispatch(fetchBillingItems());\n    dispatch(fetchBillingCategories());\n    setOpen(false);\n  }, [dispatch]);\n\n  const fetchItems = async () => {\n    try {\n      const res = await axios.get('/api/billing-item');\n      setItems(res.data || []);\n    } catch {\n      setSnackbar({ open: true, message: 'Failed to fetch items', severity: 'error' });\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const res = await axios.get('/api/billing-category');\n      setCategories(res.data || []);\n    } catch {\n      setSnackbar({ open: true, message: 'Failed to fetch categories', severity: 'error' });\n    }\n  };\n\n  // Calculate tax and discount whenever relevant fields change\n  useEffect(() => {\n    const quantity = Number(form.quantity) || 1;\n    const unitPrice = Number(form.unitPrice) || 0;\n    const taxPercent = Number(form.taxPercent) || 0;\n    const discountPercent = Number(form.discountPercent) || 0;\n    const discount = ((unitPrice * quantity) * discountPercent) / 100;\n\n    const tax = (discount > 0 ? (unitPrice * quantity - discount) * taxPercent : (unitPrice * quantity) * taxPercent) / 100;\n    const finalAmount = unitPrice * quantity + tax - discount;\n\n    setForm((prev) => ({\n      ...prev,\n      tax: tax,\n      discount: discount,\n      finalAmount: finalAmount,\n    })); \n  }, [form.quantity, form.unitPrice, form.taxPercent, form.discountPercent]);\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editId) {\n        dispatch(updateBillingItem(form)).then(res => {\n          if (res.error) {\n            setSnackbar({ open: true, message: 'Update failed', severity: 'error' });\n          } else {\n            dispatch(fetchBillingItems());\n            setSnackbar({ open: true, message: 'Item updated!', severity: 'success' });\n          }\n        });\n        setEditId(null);\n      } else if (form.name === '' || form.unitPrice === '' || form.category === '') {\n        setSnackbar({ open: true, message: 'Please fill all required fields', severity: 'warning' });\n      } else {\n        dispatch(addBillingItem(form)).then(res => {\n          if (res.error) {\n            dispatch(fetchBillingItems());\n            setSnackbar({ open: true, message: 'Creation failed', severity: 'error' });\n          } else {\n            resetForm()\n            setSnackbar({ open: true, message: 'Item created!', severity: 'success' });\n          }\n        });\n      } \n       \n    } catch {\n      setSnackbar({ open: true, message: 'Operation failed', severity: 'error' });\n    }\n  };\n  const resetForm = () => {\n    setForm({\n        name: '',\n        description: '',\n        category: '',\n        quantity: 1,\n        unitPrice: '',\n        taxPercent: '',\n        tax: 0,\n        discountPercent: '',\n        discount: 0,\n        finalAmount: 0,\n      });\n      setEditId(null);\n  };\n  const handleEdit = (item) => {\n    console.log(item);\n    setForm({\n      id: item._id,\n      name: item.name,\n      description: item.description,\n      category: item.category?._id || item.category || '',\n      quantity: item.quantity || 1,\n      unitPrice: item.unitPrice?.$numberDecimal || item.unitPrice || '',\n      taxPercent: item.taxPercent,\n      tax: item.tax,\n      discountPercent: item.discountPercent,\n      discount: item.discount,\n      finalAmount: item.finalAmount,\n    });\n    setEditId(item._id);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleDelete = async () => {\n    dispatch(deleteBillingItem(deleteId)).then(res => {\n      if (res.error) {\n        setSnackbar({ open: true, message: 'Delete failed', severity: 'error' });\n      } else {\n        dispatch(fetchBillingItems());\n        setDeleteId(null);\n        setSnackbar({ open: true, message: 'Item deleted!', severity: 'success' });\n      }\n    });\n  };\n\n  const columns = [\n    { field: 'name', headerName: 'Item Name', flex: 1, minWidth: 150 },\n    { field: 'description', headerName: 'Description', flex: 2, minWidth: 180 },\n    {\n      field: 'category',\n      headerName: 'Category',\n      width: 140,\n      valueGetter: (params) => params?.name || ''\n    },\n    { field: 'quantity', headerName: 'Qty', width: 70 },\n    {\n      field: 'unitPrice',\n      headerName: 'Unit Price',\n      width: 110,\n      renderCell: (params) => `₹${params.value?.$numberDecimal}`,\n    },\n    {\n      field: 'row',\n      headerName: 'Tax %',\n      width: 80,\n      renderCell: (params) => { \n        const { tax, unitPrice, quantity, discount } = params.row;\n        return `${((tax?.$numberDecimal / (discount ? (unitPrice?.$numberDecimal - discount?.$numberDecimal) * quantity : unitPrice?.$numberDecimal * quantity)) * 100).toFixed(2)}%`;\n      },\n\n    },\n    {\n      field: 'tax',\n      headerName: 'Tax',\n      width: 90,\n      renderCell: (params) => `₹${Number(params.value?.$numberDecimal || 0).toFixed(2)}`,\n    },\n    {\n      field: 'discountPercent',\n      headerName: 'Discount %',\n      width: 100,\n      renderCell: (params) => {\n        const { discount, unitPrice, quantity } = params.row;\n        const discountValue = discount?.$numberDecimal\n          ? Number(discount.$numberDecimal)\n          : Number(discount) || 0;\n        const unitPriceValue = unitPrice?.$numberDecimal\n          ? Number(unitPrice.$numberDecimal)\n          : Number(unitPrice) || 0;\n        const qty = Number(quantity) || 1;\n        const percent = unitPriceValue * qty > 0\n          ? ((discountValue / (unitPriceValue * qty)) * 100).toFixed(2)\n          : '0.00';\n        return `${percent}%`;\n      }\n    },\n    {\n      field: 'discount',\n      headerName: 'Discount',\n      width: 100,\n      renderCell: (params) => `₹${Number(params.value?.$numberDecimal || 0).toFixed(2)}`,\n    },\n    {\n      field: 'totalPrice',\n      headerName: 'Final Amount',\n      width: 120,\n      renderCell: (params) => `₹${Number(params.value?.$numberDecimal || params.value || 0).toFixed(2)}`,\n    },\n    {\n      field: 'actions',\n      headerName: 'Actions',\n      width: 140,\n      sortable: false,\n      renderCell: (params) => (\n        <>\n          <IconButton color=\"primary\" onClick={() => handleEdit(params.row)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton color=\"error\" onClick={() => setDeleteId(params.row._id)}>\n            <DeleteIcon />\n          </IconButton>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ display: 'flex', border: '1px solid #ccc', backgroundColor: '#f5f5f5', padding: '10px', marginBottom: '20px' }}>\n        <Typography variant=\"h5\" color=\"textSecondary\">\n         Manage Billing Items\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\" sx={{ marginLeft: 'auto' }} onClick={() => dispatch(fetchBillingItems({}))}>\n          Refresh\n        </Button>\n        {/* <Button variant=\"contained\" color=\"secondary\" sx={{ marginLeft: '10px' }} onClick={() => window.location.href = routesName.BILLING}>\n          Add New Billing\n        </Button>\n        <Button variant=\"contained\" color=\"success\" sx={{ marginLeft: '10px' }} onClick={() => exportBillings()}>\n          Export Billings Items\n        </Button> */}\n      </Box>\n      <Box sx={{ maxWidth: 1100, mx: 'auto', mt: 4, p: { xs: 1, sm: 2 } }}>\n        <Paper\n          sx={{\n            p: 3,\n            mb: 4,\n            background: 'linear-gradient(90deg, #43cea2 0%, #185a9d 100%)',\n            color: '#fff',\n            borderRadius: 3,\n            boxShadow: 4,\n          }}\n        >\n          <Typography variant=\"h5\" fontWeight=\"bold\" gutterBottom>\n            {editId ? 'Update Billing Item' : 'Create Billing Item'}\n          </Typography>\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={12} sm={2.4}>\n                <TextField\n                  label=\"Item Name\"\n                  name=\"name\"\n                  value={form.name}\n                  onChange={handleChange}\n                  fullWidth\n                  required\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff', fontWeight: 600 },\n                    label: { color: '#fff' }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={2.4}>\n                <TextField\n                  label=\"Description\"\n                  name=\"description\"\n                  value={form.description}\n                  onChange={handleChange}\n                  fullWidth\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <TextField\n                  select\n                  label=\"Category\"\n                  name=\"category\"\n                  value={form.category}\n                  onChange={handleChange}\n                  fullWidth\n                  required\n                  variant=\"filled\"\n                  sx={{\n                    width: '160px',\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                >\n                  {billingCategory && billingCategory.map((cat) => (\n                    <MenuItem key={cat._id} value={cat._id}>{cat.name}</MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs={12} sm={1}>\n                <TextField\n                  label=\"Qty\"\n                  name=\"quantity\"\n                  value={form.quantity}\n                  onChange={handleChange}\n                  type=\"number\"\n                  fullWidth\n                  required\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                  inputProps={{ min: 1 }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={1.2}>\n                <TextField\n                  label=\"Unit Price\"\n                  name=\"unitPrice\"\n                  value={form.unitPrice}\n                  onChange={handleChange}\n                  type=\"number\"\n                  fullWidth\n                  required\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                  inputProps={{ min: 0 }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={1}>\n                <TextField\n                  label=\"Tax %\"\n                  name=\"taxPercent\"\n                  value={form.taxPercent}\n                  onChange={handleChange}\n                  type=\"number\"\n                  fullWidth\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                  inputProps={{ min: 0 }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={1.2}>\n                <TextField\n                  label=\"Tax\"\n                  name=\"tax\"\n                  value={Number(form.tax || 0).toFixed(2)}\n                  InputProps={{ readOnly: true }}\n                  fullWidth\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={1}>\n                <TextField\n                  label=\"Discount %\"\n                  name=\"discountPercent\"\n                  value={form.discountPercent}\n                  onChange={handleChange}\n                  type=\"number\"\n                  fullWidth\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                  inputProps={{ min: 0 }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={1.2}>\n                <TextField\n                  label=\"Discount\"\n                  name=\"discount\"\n                  value={Number(form.discount || 0).toFixed(2)}\n                  InputProps={{ readOnly: true }}\n                  fullWidth\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={1.2}>\n                <TextField\n                  label=\"Final Amount\"\n                  name=\"finalAmount\"\n                  value={Number(form.finalAmount || 0).toFixed(2)}\n                  InputProps={{ readOnly: true }}\n                  fullWidth\n                  variant=\"filled\"\n                  sx={{\n                    background: 'rgba(255,255,255,0.15)',\n                    borderRadius: 1,\n                    input: { color: '#fff' },\n                    label: { color: '#fff' }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={1.2}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color={editId ? \"warning\" : \"secondary\"}\n                  startIcon={<AddCircleIcon />}\n                  fullWidth\n                  sx={{\n                    height: 56,\n                    fontWeight: 700,\n                    fontSize: 16,\n                    background: editId\n                      ? 'linear-gradient(90deg, #f7971e 0%, #ffd200 100%)'\n                      : 'linear-gradient(90deg, #ff9966 0%, #ff5e62 100%)',\n                    color: '#fff',\n                    boxShadow: 2,\n                    '&:hover': {\n                      background: editId\n                        ? 'linear-gradient(90deg, #ffd200 0%, #f7971e 100%)'\n                        : 'linear-gradient(90deg, #ff5e62 0%, #ff9966 100%)',\n                    },\n                  }}\n                >\n                  {editId ? 'Update' : 'Create'}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n        <Paper sx={{ p: 2, borderRadius: 3, boxShadow: 2 }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n            Billing Items\n          </Typography>\n          <div style={{ width: '100%', minHeight: 350 }}>\n            <DataGrid\n              rows={billingItems || []}\n              columns={columns}\n              getRowId={(row) => row._id}\n              pageSize={7}\n              rowsPerPageOptions={[7, 15, 30]}\n              autoHeight\n              disableSelectionOnClick\n              sx={{\n                background: 'rgba(255,255,255,0.97)',\n                borderRadius: 2,\n                '& .MuiDataGrid-columnHeaders': {\n                  background: 'linear-gradient(90deg, #43cea2 0%, #185a9d 100%)',\n                  // color: '#fff',\n                  fontWeight: 700,\n                  fontSize: 16,\n                },\n                '& .MuiDataGrid-row:hover': {\n                  background: 'rgba(67,206,162,0.08)',\n                },\n                '& .MuiDataGrid-cell': {\n                  fontSize: 15,\n                },\n              }}\n            />\n          </div>\n        </Paper>\n\n        {/* Delete Confirmation Dialog */}\n        <Dialog open={!!deleteId} onClose={() => setDeleteId(null)}>\n          <DialogTitle>Delete Item?</DialogTitle>\n          <DialogContent>\n            Are you sure you want to delete this billing item? This action cannot be undone.\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setDeleteId(null)} color=\"primary\">Cancel</Button>\n            <Button onClick={handleDelete} color=\"error\" variant=\"contained\">Delete</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Snackbar for feedback */}\n        <Snackbar\n          open={snackbar.open}\n          autoHideDuration={3000}\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        >\n          <Alert severity={snackbar.severity} sx={{ width: '100%' }}>\n            {snackbar.message}\n          </Alert>\n        </Snackbar>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BillingItem;"],"names":["createSvgIcon","_jsx","d","BillingItem","items","setItems","useState","categories","setCategories","form","setForm","id","name","description","category","quantity","unitPrice","taxPercent","tax","discountPercent","discount","finalAmount","editId","setEditId","deleteId","setDeleteId","snackbar","setSnackbar","open","message","severity","setOpen","loading","setLoading","dispatch","useDispatch","billingCategory","useSelector","state","billingItems","useEffect","fetchBillingItems","fetchBillingCategories","Number","prev","handleChange","e","target","value","resetForm","columns","field","headerName","flex","minWidth","width","valueGetter","params","renderCell","_params$value","$numberDecimal","row","toFixed","_params$value2","discountValue","unitPriceValue","qty","_params$value3","_params$value4","sortable","_jsxs","_Fragment","children","IconButton","color","onClick","item","_item$category","_item$unitPrice","console","log","_id","window","scrollTo","top","behavior","handleEdit","EditIcon","DeleteIcon","Box","sx","display","border","backgroundColor","padding","marginBottom","Typography","variant","Button","marginLeft","maxWidth","mx","mt","p","xs","sm","Paper","mb","background","borderRadius","boxShadow","fontWeight","gutterBottom","onSubmit","async","preventDefault","updateBillingItem","then","res","error","addBillingItem","Grid","container","spacing","alignItems","TextField","label","onChange","fullWidth","required","input","select","map","cat","MenuItem","type","inputProps","min","InputProps","readOnly","startIcon","AddCircleIcon","height","fontSize","style","minHeight","DataGrid","rows","getRowId","pageSize","rowsPerPageOptions","autoHeight","disableSelectionOnClick","Dialog","onClose","DialogTitle","DialogContent","DialogActions","deleteBillingItem","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert"],"sourceRoot":""}