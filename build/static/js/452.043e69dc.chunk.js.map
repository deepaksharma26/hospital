{"version":3,"file":"static/js/452.043e69dc.chunk.js","mappings":"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","sources":["components/loader.jsx","app/billing/listAllBilling.jsx"],"sourcesContent":["import { Box, CircularProgress, Modal } from \"@mui/material\"\n\nexport const Loader = ({open, handleClose}) => {\n    return (\n        <Modal open={open} onClose={handleClose}>\n            <Box sx={{\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                bgcolor: 'background.paper',\n                p: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}>\n                <CircularProgress />\n                <p style={{ marginTop: '16px' }}>Loading data...</p>\n            </Box>\n        </Modal>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  IconButton,\n  CircularProgress,\n  Chip,\n  Grid\n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport VisibilityIcon from '@mui/icons-material/Visibility'; \nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBillingList } from '../redux/billingSlice';\nimport { routesName } from '../constants/routesName';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { render } from '@testing-library/react';\nimport { Loader } from '../../components/loader';\n\nconst ListAllBilling = () => { \n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { billings } = useSelector((state) => state.billing);\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  \n  useEffect(async () => {\n    setLoading(true);\n      await dispatch(fetchBillingList());\n      setLoading(false);\n  }, [dispatch]);\n\n   const columns = [\n        { field: 'id', headerName: 'ID', width: 40,\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {params.value || 'N/A'}\n            </Typography>\n        )},\n        { field: 'userId', headerName: 'Customer ID', width: 150,\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {params.value || 'N/A'}\n            </Typography>\n          )},\n        { field: 'customerName', headerName: 'Customer Name', width: 150,\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {params.value || 'N/A'}\n            </Typography>\n          )}, \n        { field: 'customerPhone', headerName: 'Phone', width: 100,\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {params.value || 'N/A'}\n            </Typography>\n          )},\n        { field: 'customerAddress', headerName: 'Address', width: 150,\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {params.value || 'N/A'}\n            </Typography>\n          )},\n         \n        { field: 'taxAmount', headerName: 'Tax', width: 90,\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" fontWeight={'bold'} color=\"textSecondary\">\n              {params.value ? params.value.toFixed(2) : '0.00'}\n            </Typography>\n          )\n        },\n        { field: 'discountAmount', headerName: 'Discount', width: 90,\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" fontWeight={'bold'} color=\"textSecondary\">\n              {params.value ? params.value.toFixed(2) : '0.00'}\n            </Typography>\n          )\n        },\n        { field: 'billingDate', headerName: 'Billing Date', width: 100,\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {new Date(params.value).toLocaleDateString()}\n            </Typography>\n          )},\n        { field: 'totalAmount', headerName: 'Total Amount',\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" fontWeight={'bold'} color=\"textSecondary\">\n              {params.value ? params.value.toFixed(2) : '0.00'}\n            </Typography>\n          ),\n\n          width: 90 },\n        { field: 'finalAmount', headerName: 'Final Amount',\n          renderCell: (params) => (\n            <Typography variant=\"subtitle1\" fontWeight={'bold'} color=\"textSecondary\">\n              {params.value ? params.value.toFixed(2) : '0.00'}\n            </Typography>\n          ),\n          width: 90 },\n        { field: 'paymentMethodDetails', headerName: 'Payment Method', width: 150 },\n\n        // {\n        //     field: 'status', renderCell: (params) =>\n        //     (\n        //         <Chip sx={{ width: 80 }} label={params.value} color={params.value == 'Active' ? 'success' : 'error'} />\n        //     ), headerName: 'Status', width: 120\n        // },\n        {\n            field: '',\n            renderCell: (e) => (\n                <>\n                    <Button label=\"Modify\" variant=\"outlined\" color=\"warning\" onClick={() => window.open(`${routesName.EDITBILLING}/${e.row._id}`, '_blank')} >Modify</Button>\n                    <Button label=\"Print\" variant=\"outlined\" color='primary' sx={{ marginLeft: 1 }}>Print</Button>\n                </>\n            ),\n            headerName: 'Modify', width: 280\n        },\n    ];\n    const paginationModel = { pageSize: 5, page: 0 };\n\n    const safeRows = billings.map((row, idx) => ({\n        ...row,\n        id: row.id ?? idx + 1, // Use existing id or fallback to index\n        role: row?.role?.rolename ? row?.role?.rolename : 'Unknown', // Map role ID to role name\n        status: row.status == 1 ? 'Active' : 'Inactive', // Map boolean status to string\n    }));\n\n    //export user Data to exvcel or csv\n    const exportBillings = () => {\n        const csvContent = \"data:text/csv;charset=utf-8,\" +\n            columns.map(col => col.headerName).join(\",\") + \"\\n\" +\n            safeRows.map(row => columns.map(col => row[col.field]).join(\",\")).join(\"\\n\");\n        const encodedUri = encodeURI(csvContent);\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        link.setAttribute(\"download\", `billings${new Date().toISOString().slice(0, 10)}.csv`);\n        document.body.appendChild(link); // Required for FF\n        link.click();\n        document.body.removeChild(link); // Clean up\n    };\n\n  return (\n   <Box sx={{ width: '100%' }}>\n            <Box sx={{ display: 'flex', border: '1px solid #ccc', backgroundColor: '#f5f5f5', padding: '10px', marginBottom: '20px' }}>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    List of All Billings\n                </Typography>\n                <Button variant=\"contained\" color=\"primary\" sx={{ marginLeft: 'auto' }} onClick={() => dispatch(fetchBillingList({}))}>\n                    Refresh\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\" sx={{ marginLeft: '10px' }} onClick={() => window.location.href = routesName.BILLING}>\n                    Add New Billing\n                </Button>\n                <Button variant=\"contained\" color=\"success\" sx={{ marginLeft: '10px' }} onClick={() => exportBillings()}>\n                    Export Billings\n                </Button>\n            </Box>\n            <Grid item xs={12} sx={{ justifyContent: 'center', display: 'flex', marginTop: '20px' }}>\n                <Paper sx={{ width: '100%' }}>\n                    <DataGrid\n                        rows={safeRows}\n                        columns={columns}\n                        initialState={{ pagination: { paginationModel } }}\n                        pageSizeOptions={[5, 10]}\n                        sx={{ border: 0, width: '100%' }}\n                    />\n                </Paper>\n            </Grid>\n\n           <Loader open={open}/>\n        </Box>\n  );\n};\n\nexport default ListAllBilling;\n"],"names":["Loader","_ref","open","handleClose","_jsx","Modal","onClose","children","_jsxs","Box","sx","position","top","left","transform","bgcolor","p","display","flexDirection","alignItems","justifyContent","CircularProgress","style","marginTop","ListAllBilling","loading","setLoading","useState","dispatch","useNavigate","useDispatch","billings","useSelector","state","billing","setOpen","useEffect","async","fetchBillingList","columns","field","headerName","width","renderCell","params","Typography","variant","color","value","fontWeight","toFixed","Date","toLocaleDateString","e","_Fragment","Button","label","onClick","window","routesName","EDITBILLING","row","_id","marginLeft","safeRows","map","idx","_row$id","_row$role","_row$role2","id","role","rolename","status","border","backgroundColor","padding","marginBottom","location","href","BILLING","exportBillings","csvContent","col","join","encodedUri","encodeURI","link","document","createElement","setAttribute","toISOString","slice","body","appendChild","click","removeChild","Grid","item","xs","Paper","DataGrid","rows","initialState","pagination","paginationModel","pageSize","page","pageSizeOptions"],"sourceRoot":""}