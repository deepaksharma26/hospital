{"version":3,"file":"static/js/204.0e19a868.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/RemoveCircle.js","app/billing/index.jsx","../node_modules/@mui/icons-material/esm/AddCircle.js","../node_modules/@mui/icons-material/esm/Clear.js","utills/index.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m5 11H7v-2h10z\"\n}), 'RemoveCircle');","import React, { useEffect, useState } from 'react';\nimport {\n  Box, Typography, Button, Paper, Grid, TextField, MenuItem, Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow, IconButton, Divider\n} from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { formatDate, windowWidth } from '../../utills';\nimport { fetchBillingCategories } from '../redux/billingCategorySlice';\nimport { fetchPaymentType } from '../redux/paymentTypeSlice';\nimport { fetchFinancialYear } from '../redux/financialYearSlice';\nimport { addBillingItem, fetchBillingItems } from '../redux/billingItemsSlice';\nimport { addBilling } from '../redux/billingSlice';\nimport { routesName } from '../constants/routesName';\n\n// const billingTypes = ['Consultation', 'Surgery', 'Medicine', 'Other'];\n// const financialYears = ['2023-2024', '2024-2025', '2025-2026'];\n// const paymentMethods = ['Cash', 'Card', 'UPI', 'Net Banking'];\n\nfunction numberToWords(num) {\n  if (num === 0) return 'Zero';\n  if (typeof num !== 'number') num = Number(num);\n  const a = [\n    '', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten',\n    'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n  ];\n  const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n\n  const crore = Math.floor(num / 10000000);\n  const lakh = Math.floor((num % 10000000) / 100000);\n  const thousand = Math.floor((num % 100000) / 1000);\n  const hundred = Math.floor((num % 1000) / 100);\n  const rest = num % 100;\n\n  let result = '';\n  if (crore) result += numberToWords(crore) + ' Crore ';\n  if (lakh) result += numberToWords(lakh) + ' Lakh ';\n  if (thousand) result += numberToWords(thousand) + ' Thousand ';\n  if (hundred) result += a[hundred] + ' Hundred ';\n  if (rest) {\n    if (result !== '') result += 'and ';\n    if (rest < 20) result += a[rest];\n    else result += b[Math.floor(rest / 10)] + (rest % 10 ? ' ' + a[rest % 10] : '');\n  }\n  return result.trim();\n}\n\nconst Billing = () => {\n  const { billingCategory } = useSelector((state) => state.billingCategory);\n  const { paymentType } = useSelector((state) => state.paymentType);\n  const { financialYears } = useSelector((state) => state.financialYear);\n  const { billingItems } = useSelector((state) => state.billingItems);\n  const [newItems, setNewItems] = useState(billingItems || []);\n  const dispactch = useDispatch();\n  useEffect(() => {\n    // Fetch billing categories or any other necessary data\n    dispactch(fetchBillingCategories());\n    dispactch(fetchPaymentType());\n    dispactch(fetchFinancialYear());\n    dispactch(fetchBillingItems());\n  }, [dispactch]);\n  const screenwidth = windowWidth();\n\n  // Customer Info State\n  const [customer, setCustomer] = useState({\n    customerId: '',\n    name: '',\n    address: '',\n    contact: '',\n  });\n\n  // Billing Details State\n  const [billingDetails, setBillingDetails] = useState({\n    billingType: '',\n    financialYear: '',\n    billingDate: new Date().toISOString().split('T')[0], // Default to today\n  });\n\n  // Billing Items State\n  const [items, setItems] = useState([\n    { billingItems:'', itemName: '', quantity: 1, unitPrice: 0, taxPercent: 0, tax: 0, amount: 0, discount: 0 }\n  ]);\n\n  // Other State\n  const [remark, setRemark] = useState('');\n  const [customerNotes, setCustomerNotes] = useState('');\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [itemSuggestions, setItemSuggestions] = useState({});\n  const [highlightedSuggestion, setHighlightedSuggestion] = useState({});\n\n  // Handlers\n  const handleCustomerChange = (e) => {\n    setCustomer({ ...customer, [e.target.name]: e.target.value });\n  };\n\n  const handleBillingDetailsChange = (e) => {\n\n    setBillingDetails({ ...billingDetails, [e.target.name]: e.target.value });\n  };\n\n  const handleItemChange = (idx, field, value) => {\n    const newItemsArr = items.map((item, i) => {\n      if (i !== idx) return item;\n\n      // Ensure all values are numbers\n      const getNumber = v =>\n        typeof v === 'object' && v !== null && '$numberDecimal' in v\n          ? Number(v.$numberDecimal)\n          : Number(v) || 0;\n\n      let updated = { ...item, [field]: ['quantity', 'unitPrice', 'discount', 'taxPercent', 'tax'].includes(field) ? getNumber(value) : value };\n\n      // Always use numbers for calculations\n      updated.unitPrice = getNumber(updated.unitPrice);\n      updated.quantity = getNumber(updated.quantity);\n      updated.discount = getNumber(updated.discount);\n      updated.taxPercent = getNumber(updated.taxPercent);\n      updated.tax = getNumber(updated.tax);\n\n      // Calculate tax if taxPercent, unitPrice, or quantity changes\n      if (field === 'taxPercent' || field === 'unitPrice' || field === 'quantity') {\n        updated.tax = ((updated.unitPrice * updated.quantity * updated.taxPercent) / 100).toFixed(2);\n      }\n\n      // If tax is changed directly, update taxPercent accordingly\n      if (field === 'tax') {\n        updated.taxPercent = updated.unitPrice && updated.quantity\n          ? ((updated.tax * 100) / (updated.unitPrice * updated.quantity)).toFixed(2) \n          : 0;\n      }\n\n      // Calculate amount: (unitPrice * quantity) + tax - discount\n      updated.amount = updated.unitPrice * updated.quantity + updated.tax - updated.discount;\n\n      return updated;\n    });\n    setItems(newItemsArr);\n\n    // For itemName field, filter suggestions\n    if (field === 'itemName') {\n      const filtered = billingItems && billingItems\n        .filter((suggestion) =>\n          suggestion.name.toLowerCase().includes(value.toLowerCase())\n        );\n      setItemSuggestions((prev) => ({ ...prev, [idx]: filtered }));\n      setHighlightedSuggestion(prev => ({ ...prev, [idx]: undefined }));\n    }\n  };\n\n  const handleAddItem = () => {\n    setItems([...items, {billingItems:'', itemName: '', quantity: 0, unitPrice: 0, taxPercent: 0, tax: 0, amount: 0, discount: 0 }]);\n  };\n\n  const handleRemoveItem = (idx) => {\n    setItems(items.filter((_, i) => i !== idx));\n  };\n\n  const handleSuggestionClick = (idx, suggestion) => {\n    const getNumber = v =>\n      typeof v === 'object' && v !== null && '$numberDecimal' in v\n        ? Number(v.$numberDecimal)\n        : Number(v) || 0;\n\n    const newItemsArr = items.map((item, i) => {\n      if (i !== idx) return item;\n\n      const unitPrice = getNumber(suggestion.unitPrice);\n      const quantity = getNumber(suggestion.quantity) || 1;\n      const taxPercent = getNumber(suggestion.taxPercent || suggestion.tax_percent || 0);\n      let tax = getNumber(suggestion.tax);\n      // If taxPercent is provided, recalculate tax\n      if (taxPercent) {\n        tax = (unitPrice * quantity * taxPercent) / 100;\n      }\n      const discount = getNumber(suggestion.discount);\n\n      // Calculate amount: (unitPrice * quantity) + tax - discount\n      const amount = unitPrice * quantity + tax - discount;\n\n      return {\n        ...item,\n        billingItems: suggestion._id,\n        itemName: suggestion.name,\n        quantity,\n        unitPrice,\n        taxPercent,\n        tax,\n        discount,\n        amount,\n      };\n    });\n\n    setItems(newItemsArr);\n    setItemSuggestions((prev) => ({ ...prev, [idx]: [] }));\n  };\n\n  // Billing Summary\n  const totalAmount = items.reduce((sum, item) => sum + item.amount, 0);\n  const totalTax = items.reduce((sum, item) => {\n    let tax = item.tax;\n    if (typeof tax === 'object' && tax !== null && '$numberDecimal' in tax) {\n      tax = Number(tax.$numberDecimal);\n    } else {\n      tax = Number(tax) || 0;\n    }\n    return sum + tax;\n  }, 0);\n  const totalDiscount = items.reduce((sum, item) => {\n    let discount = item.discount;\n    if (typeof discount === 'object' && discount !== null && '$numberDecimal' in discount) {\n      discount = Number(discount.$numberDecimal);\n    } else {\n      discount = Number(discount) || 0;\n    }\n    return sum + discount;\n  }, 0);\n\n  // Submit Handler (for demo)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Submit logic here\n    const data = {\n      userId: customer.customerId,\n      plan: billingDetails?.billingType?.name || '',\n      details: remark,\n      billingDetails: items.map(item => ({\n        billingItems: item.billingItems ? item.billingItems : '',\n        name: item.itemName,\n        quantity: item.quantity,\n        unitPrice: item.unitPrice,\n        totalPrice: item.amount, \n        tax: item.tax || 0,\n        discount: item.discount || 0,\n      })),\n      customerName: customer.name,\n      customerAddress: customer.address,\n      customerPhone: customer.contact,\n      category: billingDetails.financialYear,\n      invoiceNumber: `INV-${Date.now()}`,\n      invoiceDate: billingDetails.billingDate || new Date(),\n      dueDate: new Date(new Date().setDate(new Date().getDate() + 30)), // Due date 30 days from now\n      totalAmount: totalAmount,\n      taxAmount: items.reduce((sum, item) => sum + (item.tax || 0), 0),\n      discountAmount: items.reduce((sum, item) => sum + (item.discount || 0), 0),\n      finalAmount: totalAmount + items.reduce((sum, item) => sum + (item.tax || 0), 0) - items.reduce((sum, item) => sum + (item.discount || 0), 0),\n      currency: 'INR',\n      paymentStatus: 'Pending',\n      paymentDate: new Date(),\n      paymentReference: '',\n      paymentMethodDetails: paymentMethod,\n    }\n    console.log('Billing Data:', data); \n    dispactch(addBilling(data)).then((res) => {\n      if (res.error) {\n        console.error('Error adding billing item:', res.error);\n        return;\n      }else {\n        // Reset form after successful submission\n        window.location.href = '/list-billings';\n      }\n    }).catch((error) => {\n      // Handle error, e.g., show an error message\n      console.error('Error adding billing item:', error);\n    }); \n  };\n\n  return (\n    <Box sx={{ width: (screenwidth - 240) + 'px' }}>\n      <Box sx={{ display: 'flex', border: '1px solid #ccc', backgroundColor: '#f5f5f5', padding: '10px', marginBottom: '20px' }}>\n        <Typography variant=\"h5\" color=\"textSecondary\">\n          User Billing Information\n        </Typography>\n\n        <TextField\n          label=\"Billing Date\"\n          name=\"billingDate\"\n          type=\"date\"\n          value={billingDetails.billingDate}\n          onChange={handleBillingDetailsChange}\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          required\n          sx={{ display: 'none', marginLeft: '20px', marginRight: '20px', width: '200px', }}\n        />\n        <Button variant=\"contained\" color=\"primary\" sx={{ marginLeft: 'auto' }} onClick={() => window.location.href = routesName.LISTBILLIS}>\n          Search Billings\n        </Button>\n      </Box>\n      <Box sx={{ minWidth: 550 }}>\n\n        <form onSubmit={handleSubmit}>\n          {/* Customer Info Section */}\n          <Paper sx={{ mb: 2, }}>\n            <Box sx={{ display: 'flex', flexDirection: 'row', gap: 10, alignItems: 'center', justifyContent: 'space-between', borderBottom: '1px solid #CECECE', padding: '10px', pt: 2, mb: 2, backgroundColor: '#f5f5f5', height: '20px' }}>\n              <Typography variant=\"h6\" gutterBottom>Customer Info</Typography>\n              <Typography variant=\"h6\" sx={{ textAlign: 'right', justifyContent: 'flex-end' }} gutterBottom>Date: {formatDate(billingDetails.billingDate)}</Typography>\n            </Box>\n\n            <Grid container spacing={2} sx={{ padding: 2 }}>\n              <Grid item xs={12} sm={3}>\n                <TextField label=\"Customer ID\" name=\"customerId\" value={customer.customerId} onChange={handleCustomerChange} fullWidth required />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <TextField label=\"Name\" name=\"name\" value={customer.name} onChange={handleCustomerChange} fullWidth required />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <TextField label=\"Address\" name=\"address\" value={customer.address} onChange={handleCustomerChange} fullWidth required />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <TextField label=\"Contact\" name=\"contact\" value={customer.contact} onChange={handleCustomerChange} fullWidth required />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  select\n                  label=\"Billing Type\"\n                  name=\"billingType\"\n                  value={billingDetails.billingType}\n                  onChange={handleBillingDetailsChange}\n                  fullWidth\n                  required\n                  sx={{ width: 180 }}\n                >\n                  {billingCategory && billingCategory.map((type) => (\n                    <MenuItem key={type} value={type}>{type?.name}</MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n\n            </Grid>\n          </Paper>\n\n          {/* Billing Details Section */}\n          <Paper sx={{ p: 2, mb: 3, display: 'none' }}>\n            <Typography variant=\"h6\" gutterBottom>Billing Details</Typography>\n            <Grid container spacing={2}>\n              <Box sx={{ display: 'flex', flexDirection: 'row', gap: 2, width: '100%' }}>\n\n\n                <TextField\n                  select\n                  label=\"Financial Year\"\n                  name=\"financialYear\"\n                  value={billingDetails.financialYear ? billingDetails.financialYear : '2025-26'}\n                  onChange={handleBillingDetailsChange}\n                  fullWidth\n                  required\n                  disabled={true}\n                >\n                  {financialYears && financialYears.map((year) => (\n                    <MenuItem key={year?._id} value={year?.name} selected={true} >{year?.name}</MenuItem>\n                  ))}\n                </TextField>\n\n\n              </Box>\n            </Grid>\n          </Paper>\n\n          {/* Billing Items Section */}\n          <Paper sx={{ p: 2, mb: 3, minHeight: 300 }}>\n            <Box sx={{ display: 'flex', flexDirection: 'row', gap: 10, alignItems: 'center', justifyContent: 'space-between', borderBottom: '1px solid #CECECE', padding: '10px', pt: 2, mb: 2, backgroundColor: '#f5f5f5', height: '20px' }}>\n              <Typography variant=\"h6\" gutterBottom>Billing Details</Typography>\n              <Typography variant=\"h6\" sx={{ textAlign: 'right', justifyContent: 'flex-end' }} gutterBottom>Financial Year: {billingDetails.financialYear ? billingDetails.financialYear : '2025-26'}</Typography>\n            </Box>\n            <TableContainer sx={{ minHeight: 300 }}>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell width={'450rem'}>Item Name</TableCell>\n                    <TableCell width={'60rem'}>Quantity</TableCell>\n                    <TableCell width={'120rem'}>Unit Price</TableCell>\n                    <TableCell width={'80rem'}>Tax %</TableCell> {/* Add this */}\n                    <TableCell width={'80rem'}>Tax</TableCell>\n                    <TableCell width={'80rem'}>Discount</TableCell>\n                    <TableCell width={'60rem'}>Amount</TableCell>\n                    <TableCell>Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {items.map((item, idx) => (\n                    <TableRow key={idx}>\n                      <TableCell sx={{ position: 'relative' }}>\n                        <TextField\n                          fullWidth\n                          value={item.itemName}\n                          onChange={e => handleItemChange(idx, 'itemName', e.target.value)}\n                          placeholder=\"Item Name\"\n                          size=\"small\"\n                          required\n                          autoComplete=\"off\"\n                          InputProps={{\n                            endAdornment: item.itemName && (\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => handleItemChange(idx, 'itemName', '')}\n                                edge=\"end\"\n                                aria-label=\"clear\"\n                              >\n                                <ClearIcon fontSize=\"small\" />\n                              </IconButton>\n                            ),\n                          }}\n                          onKeyDown={e => {\n                            if (itemSuggestions[idx] && itemSuggestions[idx].length > 0) {\n                              if (e.key === 'ArrowDown') {\n                                e.preventDefault();\n                                setHighlightedSuggestion(prev => ({\n                                  ...prev,\n                                  [idx]: prev[idx] === undefined || prev[idx] === itemSuggestions[idx].length - 1\n                                    ? 0\n                                    : prev[idx] + 1\n                                }));\n                              } else if (e.key === 'ArrowUp') {\n                                e.preventDefault();\n                                setHighlightedSuggestion(prev => ({\n                                  ...prev,\n                                  [idx]: !prev[idx] || prev[idx] === 0\n                                    ? itemSuggestions[idx].length - 1\n                                    : prev[idx] - 1\n                                }));\n                              } else if (e.key === 'Tab' || e.key === 'Enter') {\n                                if (highlightedSuggestion[idx] !== undefined && itemSuggestions[idx][highlightedSuggestion[idx]]) {\n                                  e.preventDefault();\n                                  handleSuggestionClick(idx, itemSuggestions[idx][highlightedSuggestion[idx]]);\n                                  setHighlightedSuggestion(prev => ({ ...prev, [idx]: undefined }));\n                                }\n                              }\n                            }\n                          }}\n                        />\n                        {itemSuggestions[idx] && itemSuggestions[idx].length > 0 && (\n                          console.log('Item Suggestions:', itemSuggestions),\n                          <Box\n                            fullWidth\n                            sx={{\n                              position: 'absolute',\n                              zIndex: 10,\n                              background: '#fff',\n                              boxShadow: 2,\n                              borderRadius: 1,\n                              mt: 1,\n                              width: '100%',\n                              maxHeight: 180,\n                              overflowY: 'auto',\n                            }}\n                          >\n                            {itemSuggestions[idx].map((suggestion, sIdx) => (\n\n                              console.log('Suggestion:', suggestion),\n                              <Box\n                                key={suggestion._id || sIdx}\n                                sx={{\n                                  px: 2,\n                                  py: 1,\n                                  cursor: 'pointer',\n                                  borderBottom: '1px solid #eee',\n                                  backgroundColor: highlightedSuggestion[idx] === sIdx ? '#e3f2fd' : '#fff',\n                                  '&:hover': { backgroundColor: '#f0f0f0' },\n                                }}\n                                onMouseEnter={() => setHighlightedSuggestion(prev => ({ ...prev, [idx]: sIdx }))}\n                                onMouseLeave={() => setHighlightedSuggestion(prev => ({ ...prev, [idx]: undefined }))}\n                                onClick={() => {\n                                  handleSuggestionClick(idx, suggestion);\n                                  setHighlightedSuggestion(prev => ({ ...prev, [idx]: undefined }));\n                                }}\n                              >\n                                {suggestion.name}\n                              </Box>\n                            ))}\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          type=\"text\"\n                          value={item.quantity}\n                          onChange={e => handleItemChange(idx, 'quantity', e.target.value)}\n                          size=\"small\"\n                          inputProps={{ min: 1 }}\n                          required\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          type=\"text\"\n                          value={\n                            typeof item.unitPrice === 'object' && item.unitPrice !== null && '$numberDecimal' in item.unitPrice\n                              ? item.unitPrice.$numberDecimal\n                              : item.unitPrice\n                          }\n                          onChange={e => handleItemChange(idx, 'unitPrice', e.target.value)}\n                          size=\"small\"\n                          inputProps={{ min: 0 }}\n                          required\n                        />\n                      </TableCell> \n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          type=\"text\"\n                          value={item.taxPercent}\n                          onChange={e => handleItemChange(idx, 'taxPercent', e.target.value)}\n                          size=\"small\"\n                          inputProps={{ min: 0 }}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          type=\"text\"\n                          value={item.tax}\n                          onChange={e => handleItemChange(idx, 'tax', e.target.value)}\n                          size=\"small\"\n                          inputProps={{ min: 0 }}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          type=\"text\"\n                          value={item.discount?.$numberDecimal}\n                          onChange={e => handleItemChange(idx, 'discount', e.target.value)}\n                          size=\"small\"\n                          inputProps={{ min: 0 }}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Typography>{item.amount.toFixed(2)}</Typography>\n                      </TableCell>\n                      <TableCell>\n                        <IconButton color=\"error\" onClick={() => handleRemoveItem(idx)} disabled={items.length === 1}>\n                          <RemoveCircleIcon />\n                        </IconButton>\n                        {idx === items.length - 1 && (\n                          <IconButton color=\"primary\" onClick={handleAddItem}>\n                            <AddCircleIcon />\n                          </IconButton>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n\n          {/* Billing Summary Section */}\n          <Paper sx={{ p: 2, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>Billing Summary</Typography>\n\n            <Box sx={{ flexGrow: 1, display: 'flex', flex: 1, width: '100%', flexDirection: 'column', alignItems: 'flex-end' }}>\n              <Typography variant=\"subtitle1\">\n                Total Amount: <b>₹{totalAmount.toFixed(2)}</b>\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                Total Tax: <b>₹{totalTax? parseFloat(totalTax).toFixed(2): 0}</b>\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                Total Discount: <b>₹{totalDiscount.toFixed(2)}</b>\n              </Typography>\n              <Typography variant=\"subtitle1\" sx={{ mt: 1, alignSelf: 'flex-end', ml: 2 }}>\n                In Words: <i>{numberToWords(Math.floor(totalAmount + totalTax))} Rupees Only</i>\n              </Typography>\n            </Box>\n            <Box sx={{ flexGrow: 1, display: 'flex', flex: 1, width: '100%', flexDirection: 'row', gap: 2, alignItems: 'flex-end' }}>\n              <TextField\n                label=\"Remark\"\n                value={remark}\n                onChange={e => setRemark(e.target.value)}\n                fullWidth\n                multiline\n                rows={2}\n              />\n              <TextField\n                label=\"Customer Note\"\n                value={customerNotes}\n                onChange={e => setCustomerNotes(e.target.value)}\n                fullWidth\n                multiline\n                rows={2}\n                sx={{ mt: 2 }}\n              />\n              <TextField\n                select\n                label=\"Payment Method\"\n                name='paymentMethod'\n                value={paymentMethod}\n                onChange={e => setPaymentMethod(e.target.value)}\n                fullWidth\n                sx={{ mt: 2 }}\n                required\n              >\n                {paymentType && paymentType.map((method) => (\n                  <MenuItem key={method?.paymentType} value={method?.paymentType}>{method?.paymentType}</MenuItem>\n                ))}\n              </TextField>\n            </Box>\n\n          </Paper>\n          <Divider sx={{ mb: 2 }} />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\">\n            Submit Billing\n          </Button>\n        </form>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Billing;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m5 11h-4v4h-2v-4H7v-2h4V7h2v4h4z\"\n}), 'AddCircle');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","export const formatDate = (date) => {\n  const options = {  day: 'numeric', month: 'long', year: 'numeric' };\n  return new Date(date).toLocaleDateString(undefined, options);\n}\nexport const formatTime = (time) => {\n  const options = { hour: '2-digit', minute: '2-digit', second: '2-digit' };\n  return new Date(time).toLocaleTimeString(undefined, options);\n}\nexport const formatDateTime = (dateTime) => {\n  const date = formatDate(dateTime);\n  const time = formatTime(dateTime);\n  return `${date} at ${time}`;\n}\nexport const formatNumber = (number) => {\n  return new Intl.NumberFormat().format(number);\n}\nexport const formatCurrency = (amount, currency = 'USD') => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currency\n  }).format(amount);\n}\nexport const formatPercentage = (value) => {\n  return `${(value * 100).toFixed(2)}%`;\n}\nexport const formatDuration = (seconds) => {    \n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n}   \nexport const checkvalidEmail = (email) => {\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return re.test(String(email).toLowerCase());\n}\nexport const checkvalidPhone = (phone) => {\n  const re = /^\\+?[1-9]\\d{1,14}$/; // E.164 format\n  return re.test(String(phone).toLowerCase());\n}\nexport const checkvalidPassword = (password) => {\n  // At least 8 characters, one uppercase, one lowercase, one number, and one special character\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  return re.test(String(password));\n}\nexport const windowWidth = () => {\n  return  window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n}\n"],"names":["createSvgIcon","_jsx","d","numberToWords","num","Number","a","b","crore","Math","floor","lakh","thousand","hundred","rest","result","trim","Billing","billingCategory","useSelector","state","paymentType","financialYears","financialYear","billingItems","newItems","setNewItems","useState","dispactch","useDispatch","useEffect","fetchBillingCategories","fetchPaymentType","fetchFinancialYear","fetchBillingItems","screenwidth","windowWidth","customer","setCustomer","customerId","name","address","contact","billingDetails","setBillingDetails","billingType","billingDate","Date","toISOString","split","items","setItems","itemName","quantity","unitPrice","taxPercent","tax","amount","discount","remark","setRemark","customerNotes","setCustomerNotes","paymentMethod","setPaymentMethod","itemSuggestions","setItemSuggestions","highlightedSuggestion","setHighlightedSuggestion","handleCustomerChange","e","target","value","handleBillingDetailsChange","handleItemChange","idx","field","newItemsArr","map","item","i","getNumber","v","$numberDecimal","updated","includes","toFixed","filtered","filter","suggestion","toLowerCase","prev","undefined","handleAddItem","handleSuggestionClick","tax_percent","_id","totalAmount","reduce","sum","totalTax","totalDiscount","_jsxs","Box","sx","width","children","display","border","backgroundColor","padding","marginBottom","Typography","variant","color","TextField","label","type","onChange","fullWidth","InputLabelProps","shrink","required","marginLeft","marginRight","Button","onClick","window","location","href","routesName","LISTBILLIS","minWidth","onSubmit","_billingDetails$billi","preventDefault","data","userId","plan","details","totalPrice","customerName","customerAddress","customerPhone","category","invoiceNumber","now","invoiceDate","dueDate","setDate","getDate","taxAmount","discountAmount","finalAmount","currency","paymentStatus","paymentDate","paymentReference","paymentMethodDetails","console","log","addBilling","then","res","error","catch","Paper","mb","flexDirection","gap","alignItems","justifyContent","borderBottom","pt","height","gutterBottom","textAlign","formatDate","Grid","container","spacing","xs","sm","select","MenuItem","p","disabled","year","selected","minHeight","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","_item$discount","position","placeholder","autoComplete","InputProps","endAdornment","IconButton","edge","ClearIcon","fontSize","onKeyDown","length","key","zIndex","background","boxShadow","borderRadius","mt","maxHeight","overflowY","sIdx","px","py","cursor","onMouseEnter","onMouseLeave","inputProps","min","_","handleRemoveItem","RemoveCircleIcon","AddCircleIcon","flexGrow","flex","parseFloat","alignSelf","ml","multiline","rows","method","Divider","date","toLocaleDateString","day","month","checkvalidEmail","email","test","String","checkvalidPassword","password","innerWidth","document","documentElement","clientWidth","body"],"sourceRoot":""}