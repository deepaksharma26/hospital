{"version":3,"file":"static/js/854.4b01d4a3.chunk.js","mappings":"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","sources":["components/sidebar.jsx","components/header.jsx","app/home/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Toolbar, Box, Typography, Tooltip } from '@mui/material';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { routesName } from '../app/constants/routesName';\n\nconst drawerWidth = 220;\n\nconst menuItems = [\n  { label: 'Dashboard', icon: <DashboardIcon />, path: routesName.DASHBOARD, color: '#43cea2' },\n  { label: 'Users', icon: <PeopleIcon />, path: routesName.LIST_ALL_USERS, color: '#ff9966' },\n  { label: 'Billing', icon: <ReceiptIcon />, path: routesName.BILLING, color: '#f7971e' },\n  { label: 'Billing Item', icon: <CategoryIcon />, path: routesName.BILLING_ITEM, color: '#b91d73' },\n  { label: 'Billing Category', icon: <CategoryIcon />, path: routesName.BILLING_CATEGORY, color: '#11998e' },\n  { label: 'Financial Year', icon: <CalendarMonthIcon />, path: routesName.FINANCIALYEAR, color: '#185a9d' },\n  // { label: 'Reports', icon: <AssessmentIcon />, path: '/report/sales', color: '#00C49F' },\n  { label: 'Logout', icon: <LogoutIcon />, path: '/logout', logout: true, color: '#ff5e62' },\n];\n\nconst Sidebar = ({ onLogout }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [hovered, setHovered] = useState(null);\n\n  const handleMenuClick = (item) => {\n    if (item.logout) {\n      onLogout();\n    } else {\n      navigate(item.path);\n    }\n  };\n\n  return (\n    <Box sx={{\n      width: { xs: 70, sm: drawerWidth },\n      flexShrink: 0,\n      top: 0,\n      left: 0,\n      marginTop: { xs: 0, sm: '64px' },\n      background: 'linear-gradient(180deg, #f5f7fa 0%, #c3cfe2 100%)',\n      minHeight: '100vh',\n      boxShadow: 4,\n      position: 'fixed',\n      zIndex: 1200,\n      height: '100vh',\n      overflow: 'hidden'\n    }}>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: { xs: 70, sm: drawerWidth },\n          flexShrink: 0,\n          top: 0,\n          position: 'relative',\n          [`& .MuiDrawer-paper`]: {\n            width: { xs: 70, sm: drawerWidth },\n            boxSizing: 'border-box',\n            background: 'linear-gradient(180deg, #f5f7fa 0%, #c3cfe2 100%)',\n            borderRight: 'none',\n            boxShadow: 4,\n            overflow: 'hidden', // Hide scrollbars\n          },\n          display: { xs: 'block', sm: 'block' },\n        }}\n      >\n        <Box sx={{\n          marginTop: '10px',\n          marginLeft: { xs: 'auto', sm: '30px' },\n          alignItems: 'center',\n          minWidth: 60,\n          height: '50px',\n          display: 'flex',\n          justifyContent: { xs: 'center', sm: 'flex-start' }\n        }}>\n          <img\n            src={require('../assets/images/logo.png')}\n            alt=\"User Icon\"\n            style={{\n              width: 48,\n              height: 48,\n              filter: 'drop-shadow(0 2px 8px #43cea2)',\n              display: 'block'\n            }}\n          />\n        </Box>\n        <Toolbar sx={{ display: { xs: 'none', sm: 'block' } }} />\n        <Box\n          sx={{\n            overflow: 'hidden', // Hide scrollbars\n            marginTop: { xs: 0, sm: '-62px' },\n            width: '100%',\n          }}\n        >\n          <Box sx={{ height: '2px', borderBottom: '1px solid #CECECE', width: '100%', }}></Box>\n          <List sx={{ p: 0 }}>\n            {menuItems.map((item, idx) => (\n              <React.Fragment key={item.label}>\n                <Tooltip title={item.label} placement=\"right\" arrow>\n                  <ListItem\n                    button\n                    onClick={() => handleMenuClick(item)}\n                    selected={location.pathname === item.path}\n                    onMouseEnter={() => setHovered(idx)}\n                    onMouseLeave={() => setHovered(null)}\n                    sx={{\n                      position: 'relative',\n                      color: location.pathname === item.path ? '#fff' : 'text.primary',\n                      background: location.pathname === item.path\n                        ? `linear-gradient(90deg, ${item.color} 0%, #185a9d 100%)`\n                        : hovered === idx\n                          ? 'rgba(67,206,162,0.08)'\n                          : 'transparent',\n                      padding: { xs: '10px 8px', sm: '12px 24px' },\n                      margin: { xs: '4px 0', sm: '6px 0' },\n                      borderRadius: 2,\n                      boxShadow: location.pathname === item.path ? 3 : 0,\n                      transition: 'all 0.2s',\n                      minWidth: 0,\n                      cursor: 'pointer',\n                      '&:active': {\n                        transform: 'scale(0.98)',\n                      },\n                      '&:focus': {\n                        outline: 'none',\n                        boxShadow: '0 0 0 2px rgba(67,206,162,0.5)',\n                      },\n                      '&:focus-visible': {\n                        boxShadow: '0 0 0 2px rgba(67,206,162,0.5)',\n                      },\n                      '&:active, &:hover': {\n                        background: location.pathname === item.path\n                          ? `linear-gradient(90deg, ${item.color} 0%, #185a9d 100%)`\n                          : hovered === idx\n                            ? 'rgba(67,206,162,0.08)'\n                            : 'transparent',\n                        color: location.pathname === item.path || hovered === idx ? '#fff' : 'text.primary',\n                      },\n                      '&:focus, &:hover': {\n                        background: location.pathname === item.path\n                          ? `linear-gradient(90deg, ${item.color} 0%, #185a9d 100%)`\n                          : hovered === idx\n                            ? 'rgba(67,206,162,0.08)'\n                            : 'transparent',\n                        color: location.pathname === item.path || hovered === idx ? '#fff' : 'text.primary',\n                      },\n                      '&:active, &:focus, &:hover': {\n                        boxShadow: location.pathname === item.path || hovered === idx ? 2 : 0,\n                        transform: location.pathname === item.path || hovered === idx ? 'scale(1.03)' : 'none',\n                      },  \n                      '&:hover': {\n                        background: `linear-gradient(90deg, ${item.color} 0%, #185a9d 100%)`,\n                        color: '#fff',\n                        boxShadow: 2,\n                        transform: 'scale(1.03)',\n                      },\n                    }}\n                  >\n                    <ListItemIcon sx={{\n                      color: location.pathname === item.path || hovered === idx ? item.color : '#888',\n                      minWidth: 0,\n                      mr: { xs: 0, sm: 2 },\n                      justifyContent: 'center',\n                      fontSize: 24,\n                      filter: location.pathname === item.path || hovered === idx\n                        ? 'drop-shadow(0 2px 8px #43cea2)'\n                        : 'none',\n                    }}>\n                      {item.icon}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={\n                        <Typography sx={{\n                          fontWeight: 700,\n                          fontSize: 16,\n                          letterSpacing: 0.5,\n                          color: location.pathname === item.path || hovered === idx ? '#fff' : '#222',\n                          textShadow: location.pathname === item.path || hovered === idx\n                            ? '0 2px 8px #43cea2'\n                            : 'none',\n                          transition: 'color 0.2s',\n                          display: { xs: 'none', sm: 'block' }\n                        }}>\n                          {item.label}\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                </Tooltip>\n                {/* <Box sx={{\n                  height: '1px',\n                  borderBottom: '1px solid #E0E0E0',\n                  width: { xs: '60%', sm: '80%' },\n                  margin: '0 auto',\n                  display: { xs: 'none', sm: 'block' }\n                }}></Box> */}\n              </React.Fragment>\n            ))}\n          </List>\n        </Box>\n      </Drawer>\n    </Box>\n  );\n};\n\nexport default Sidebar;","import React, { useEffect, useState, useRef } from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Box, Button, Avatar, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { clearSessionTimeout, getSessionTimeout, getUserIdFromToken, getUsernameFromToken, setSessionTimeout, validatePassword } from '../utills/session';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsers } from '../app/redux/userSlice';\n\nconst IDLE_TIMEOUT = 15 * 60; // 15 minutes in seconds\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [hostIp, setHostIp] = useState('Fetching...');\n  const [locked, setLocked] = useState(getSessionTimeout());\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [idleSeconds, setIdleSeconds] = useState(IDLE_TIMEOUT);\n  const idleTimer = useRef(null);\n  const countdownTimer = useRef(null);\n  const { data } = useSelector((state) => state.users);\n  const [errorTxt, setErrorTxt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const passwordInput = useRef(null);\n  // Update current time every second\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Fetch host IP address\n  useEffect(() => {\n    fetch('https://api.ipify.org?format=json')\n      .then(res => res.json())\n      .then(data => setHostIp(data.ip))\n      .catch(() => setHostIp('Unavailable'));\n  }, []);\n\n  // Idle timer and countdown logic\n  useEffect(() => {\n    const resetIdleTimer = () => {\n      setIdleSeconds(IDLE_TIMEOUT);\n      if (idleTimer.current) clearTimeout(idleTimer.current);\n      if (countdownTimer.current) clearInterval(countdownTimer.current);\n\n      // Start countdown\n      countdownTimer.current = setInterval(() => {\n        setIdleSeconds(prev => {\n          if (prev <= 1) {\n            clearInterval(countdownTimer.current);\n            setSessionTimeout(true); // Set session timeout\n            setLocked(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      // Set lock after timeout\n      idleTimer.current = setTimeout(() => {\n        setLocked(true);\n        clearInterval(countdownTimer.current);\n      }, IDLE_TIMEOUT * 1000);\n    };\n\n    // Reset timer on any user event\n    const events = ['mousemove', 'keydown', 'mousedown', 'touchstart', 'scroll'];\n    events.forEach(event => window.addEventListener(event, resetIdleTimer));\n    resetIdleTimer();\n\n    return () => {\n      events.forEach(event => window.removeEventListener(event, resetIdleTimer));\n      if (idleTimer.current) clearTimeout(idleTimer.current);\n      if (countdownTimer.current) clearInterval(countdownTimer.current);\n    };\n  }, []);\n\n  // Handle unlock\n  const handleUnlock = () => {\n    dispatch(fetchUsers({ username: getUserIdFromToken(), password: password })).then((res) => {\n      if (error) {\n        setErrorTxt('Invalid Email or Password');\n        passwordInput.current.focus();\n      } if (loading) {\n        setErrorTxt('Please Wait We Are Validating The user...');\n      } else if (res.payload) {\n        setErrorTxt('Login Successful');\n        setLocked(false);\n        setPassword('');\n        setPasswordError(''); \n        setIdleSeconds(IDLE_TIMEOUT);\n        clearSessionTimeout()\n      } else {\n        setErrorTxt('Invalid Email or Password');\n        passwordInput.current.focus();\n      }\n    });\n    // Validate password with backend\n    // dispatch(fetchUsers({ username: getUserIdFromToken(), password }).then((res) => {\n    //   if (res.error) {\n    //     setPasswordError('Invalid password');\n    //     setPassword('');\n    //   } \n    //   // else {\n    //   //   setLocked(false);\n    //   //   setPassword('');\n    //   //   setPasswordError(''); \n    //   //   setIdleSeconds(IDLE_TIMEOUT);\n    //   //   // Restart timers\n    //   //   if (idleTimer.current) clearTimeout(idleTimer.current);\n    //   //   if (countdownTimer.current) clearInterval(countdownTimer.current);\n    //   //   // Start again\n    //   //   const events = ['mousemove', 'keydown', 'mousedown', 'touchstart', 'scroll'];\n    //   //   const resetIdleTimer = () => {\n    //   //     setIdleSeconds(IDLE_TIMEOUT);\n    //   //     if (idleTimer.current) clearTimeout(idleTimer.current);\n    //   //     if (countdownTimer.current) clearInterval(countdownTimer.current);    \n    //   //     countdownTimer.current = setInterval(() => {\n    //   //       setIdleSeconds(prev => {\n    //   //         if (prev <= 1) {\n    //   //           clearInterval(countdownTimer.current);\n    //   //           setLocked(true);\n    //   //           return 0;   \n    //   //         }\n    //   //         return prev - 1;\n    //   //       });\n    //   //     }, 1000); \n    //   //     idleTimer.current = setTimeout(() => {\n    //   //       setLocked(true);\n    //   //       clearInterval(countdownTimer.current);\n    //   //     }, IDLE_TIMEOUT * 1000);\n    //   //   };\n    //   //   events.forEach(event => window.addEventListener(event, resetIdleTimer));\n    //   //   resetIdleTimer();\n    //   // }\n    // }));\n  };\n\n  const onLogout = async () => {\n    await localStorage.clear();\n    navigate('/');\n  };\n\n  // Format idle timer as mm:ss\n  const formatIdleTime = (secs) => {\n    const m = Math.floor(secs / 60).toString().padStart(2, '0');\n    const s = (secs % 60).toString().padStart(2, '0');\n    return `${m} min:${s} sec`;\n  };\n\n  return (\n    <>\n      <AppBar color={'inherit'} elevation={2}>\n        <Toolbar sx={{ justifyContent: 'space-between', flexWrap: 'wrap', ml: 30 }}>\n          {/* Left: Logo/Title */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"primary\">\n              Thakur Eye Hospital\n            </Typography>\n          </Box>\n          {/* Center: Time, IP, Idle */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 3 }}>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: 500 }}>\n              Current Time: {currentTime.toLocaleTimeString()} ||\n            </Typography>\n            <Typography variant=\"subtitle2\" sx={{ color: '#185a9d', fontWeight: 500 }}>\n              Your Logged IP Address: {hostIp} ||\n            </Typography>\n            <Typography variant=\"subtitle2\" sx={{ color: '#888', fontWeight: 500 }}>\n              Screen Lock-In: {formatIdleTime(idleSeconds)}\n            </Typography>\n          </Box>\n          {/* Right: User, Logout, Fullscreen */}\n          <Box sx={{ display: 'flex', alignItems: 'center', minWidth: 120, justifyContent: 'flex-end', gap: 1 }}>\n            <Typography variant=\"subtitle1\" sx={{ display: { xs: 'none', sm: 'block' } }}>\n              {'Welcome, ' + getUsernameFromToken()}\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              onClick={() => {\n                if (document.fullscreenElement) {\n                  document.exitFullscreen();\n                } else {\n                  document.documentElement.requestFullscreen();\n                }\n              }}\n              sx={{ ml: 1 }}\n            >\n              <FullscreenIcon />\n            </IconButton>\n            <Button\n              color=\"inherit\"\n              startIcon={<LogoutIcon />}\n              onClick={onLogout}\n              sx={{ textTransform: 'none', ml: 1 }}\n            >\n              Logout\n            </Button>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      {/* Lock Screen Dialog */}\n      <Dialog open={locked} fullWidth maxWidth=\"xs\" PaperProps={{ sx: { textAlign: 'center', py: 4 } }}>\n        <LockIcon sx={{ fontSize: 48, color: '#185a9d', mb: 2 }} />\n        <DialogTitle sx={{ fontWeight: 700 }}>Session Locked</DialogTitle>\n        <DialogContent>\n          <Typography sx={{ mb: 2 }}>Please enter your password to unlock.</Typography>\n          <TextField\n            type=\"password\"\n            label=\"Password\"\n            inputRef={passwordInput}\n            value={password}\n            onChange={e => { setPassword(e.target.value); setPasswordError(''); }}\n            error={!!passwordError}\n            helperText={passwordError}\n            fullWidth\n            autoFocus\n            onKeyDown={e => { if (e.key === 'Enter') handleUnlock(); }}\n          />\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'center' }}>\n          <Button variant=\"contained\" onClick={handleUnlock} color=\"primary\">\n            Unlock\n          </Button>\n          \n        </DialogActions>\n        {errorTxt && <Typography color={error ? 'error.main' : 'success.main'} variant=\"body2\" sx={{ textAlign: 'center', padding: '10px', textTransform: 'capitalize' }}>{errorTxt}</Typography>}\n      </Dialog>\n    </>\n  );\n};\n\nexport default Header;","import { Box, Grid, Typography, Card, Paper, Button } from \"@mui/material\";\nimport Header from \"../../components/header\";\nimport Sidebar from \"../../components/sidebar\";\nimport { useEffect, useState } from \"react\";\nimport { isTokenExpired } from \"../../utills/session\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport PieChartIcon from '@mui/icons-material/PieChart';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport PeopleIcon from '@mui/icons-material/People';\nimport ReceiptLongIcon from '@mui/icons-material/ReceiptLong';\nimport { PieChart, Pie, Cell, Legend, Tooltip, ResponsiveContainer } from 'recharts';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchDashboardData } from \"../redux/dashboardSlice\";\nimport { routesName } from \"../constants/routesName\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport CreditCardIcon from '@mui/icons-material/CreditCard';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\nimport { useNavigate } from \"react-router-dom\";\n\nconst pieData = [\n  { name: \"Consultation\", value: 4000 },\n  { name: \"Surgery\", value: 3000 },\n  { name: \"Medicine\", value: 2000 },\n  { name: \"Other\", value: 1500 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#533eaeff', '#533eaeff', '#ff8042', '#d32f2f', '#1976d2', '#388e3c', '#f57c00', '#7b1fa2'];\nvar count = 0;\nconst Home = ({ element }) => { \n  const [printData, setPrintData] = useState(false);\n  const { dashboardData } = useSelector((state) => state.dashboard);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isTokenExpired()) { \n      navigate('/');\n    }\n    dispatch(fetchDashboardData()); \n  }, []);\n\n  const cardData = [\n    { \n      title: `Today's Sales - ${dashboardData?.today?.count ?? 0}`, \n      value: `₹${parseFloat(dashboardData?.today?.sum ?? 0).toFixed(2)}`, \n      icon: <MonetizationOnIcon fontSize=\"large\" />, \n      gradient: \"linear-gradient(90deg, #43cea2 0%, #185a9d 100%)\" \n    },\n    \n    \n    // Only spread if todayByPaymentType is an array\n    ...(Array.isArray(dashboardData?.todayByPaymentType)\n      ? dashboardData.todayByPaymentType.map((item) => ({\n          title: item._id,\n          value: `₹${parseFloat(item.sum ?? 0).toFixed(2)}`,\n          icon: <PaymentIcon fontSize=\"large\" />,\n          gradient: `linear-gradient(90deg, ${COLORS[count++]} 0%, #185a9d 100%)`\n        }))\n      : [])\n      ,\n      { \n      title: \"Month Revenue\", \n      value: `₹${parseFloat(dashboardData?.month?.sum ?? 0).toFixed(2)}`, \n      icon: <PieChartIcon fontSize=\"large\" />, \n      gradient: \"linear-gradient(90deg, #f953c6 0%, #b91d73 100%)\" \n      } \n  ];\n \n  const columns = [\n      \n      { field: 'userId', headerName: 'Customer ID', width: 150,\n        renderCell: (params) => (\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {params.value || 'N/A'}\n          </Typography>\n        )},\n      { field: 'customerName', headerName: 'Customer Name', width: 150,\n        renderCell: (params) => (\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {params.value || 'N/A'}\n          </Typography>\n        )},\n      { field: 'customerPhone', headerName: 'Phone', width: 100,\n        renderCell: (params) => (\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {params.value || 'N/A'}\n          </Typography>\n        )},\n      { field: 'customerAddress', headerName: 'Address', width: 150,\n        renderCell: (params) => (\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {params.value || 'N/A'}\n          </Typography>\n        )},\n      { field: 'taxAmount', headerName: 'Tax', width: 90,\n        renderCell: (params) => (\n          <Typography variant=\"subtitle1\" fontWeight={'bold'} color=\"textSecondary\">\n            {params.value ? params.value.toFixed(2) : '0.00'}\n          </Typography>\n        )\n      },\n      { field: 'discountAmount', headerName: 'Discount', width: 90,\n        renderCell: (params) => (\n          <Typography variant=\"subtitle1\" fontWeight={'bold'} color=\"textSecondary\">\n            {params.value ? params.value.toFixed(2) : '0.00'}\n          </Typography>\n        )\n      },\n      // { field: 'billingDate', headerName: 'Billing Date', width: 100,\n      //   renderCell: (params) => (\n      //     <Typography variant=\"subtitle1\" color=\"textSecondary\">\n      //       {new Date(params.value).toLocaleDateString()}\n      //     </Typography>\n      //   )},\n      { field: 'totalAmount', headerName: 'Total Amount',\n        renderCell: (params) => (\n          <Typography variant=\"subtitle1\" fontWeight={'bold'} color=\"textSecondary\">\n            {params.value ? params.value.toFixed(2) : '0.00'}\n          </Typography>\n        ),\n        width: 90 },\n      { field: 'finalAmount', headerName: 'Final Amount',\n        renderCell: (params) => (\n          <Typography variant=\"subtitle1\" fontWeight={'bold'} color=\"textSecondary\">\n            {params.value ? params.value.toFixed(2) : '0.00'}\n          </Typography>\n        ),\n        width: 90 },\n      { field: 'paymentMethodDetails', headerName: 'Payment Method', width: 150\n        , renderCell: (params) => (\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {params.value || 'N/A'}\n          </Typography>\n        ) \n       },\n      {\n        field: '',\n        renderCell: (e) => (\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <Button\n              label=\"Modify\"\n              variant=\"outlined\"\n              color=\"warning\"\n              size=\"small\"\n              onClick={() => window.open(`${routesName.EDITBILLING}/${e.row._id}`, '_blank')}\n              sx={{ fontWeight: 600 }}\n            >\n              Modify\n            </Button>\n            <Button\n              label=\"Print\"\n              variant=\"outlined\"\n              color='primary'\n              size=\"small\"\n              sx={{ fontWeight: 600 }}\n              onClick={() => handlePrint(e.row)}\n            >\n              Print\n            </Button>\n          </Box>\n        ),\n        headerName: 'Modify', width: 200\n      },\n    ];\n    const handlePrint = (e) => {\n      setPrintData(e);\n    };\n    \n    return (\n      <Grid container sx={{ width: '100%', m: 0, p: 0, overflow: 'hidden' }}>\n        \n        <Grid item xs={12}>\n          <Box\n            sx={{\n              flexGrow: 1,\n              p: { xs: 1, sm: 2, md: 3 },\n              width: '100%',\n              maxWidth: '100vw',\n              overflow: 'hidden',\n              boxSizing: 'border-box',\n            }}\n          >\n            {/* Attractive Heading and Welcome */}\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                mb: 3,\n                flexDirection: 'column',\n                width: '100%',\n                overflow: 'hidden',\n              }}\n            >\n              <Box>\n                <Typography\n                  variant=\"h3\"\n                  fontWeight=\"bold\"\n                  sx={{\n                    background: 'linear-gradient(90deg, #43cea2 0%, #185a9d 100%)',\n                    WebkitBackgroundClip: 'text',\n                    WebkitTextFillColor: 'transparent',\n                    textAlign: 'center',\n                    fontSize: { xs: '2rem', sm: '2.5rem', md: '3rem' },\n                    wordBreak: 'break-word',\n                  }}\n                >\n                  Thakur Eye Hospital Billing Dashboard\n                </Typography>\n              </Box>\n              {/* Card Tiles */}\n              <Box\n                sx={{\n                  display: 'flex',\n                  gap: { xs: 1, sm: 2 },\n                  mt: 4,\n                  mb: 4,\n                  flexWrap: 'wrap',\n                  justifyContent: 'center',\n                  width: '100%',\n                }}\n              >\n                {cardData.map((card, idx) => (\n                  <Card\n                    key={idx}\n                    sx={{\n                      minWidth: 160,\n                      maxWidth: 220,\n                      color: '#fff',\n                      background: card.gradient,\n                      boxShadow: 3,\n                      borderRadius: 3,\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      px: 2,\n                      py: 2,\n                      m: 1,\n                      flex: '1 1 160px',\n                    }}\n                  >\n                    <Box sx={{ mb: 1 }}>{card.icon}</Box>\n                    <Typography variant=\"subtitle2\" sx={{ opacity: 0.9, textAlign: 'center' }}>\n                      {card.title}\n                    </Typography>\n                    <Typography variant=\"h5\" fontWeight=\"bold\">\n                      {card.value}\n                    </Typography>\n                  </Card>\n                ))}\n              </Box>\n            </Box>\n\n            {/* Data Table and Pie Chart Rows */}\n            <Grid container spacing={3} sx={{ width: '100%', m: 0 }}>\n              {/* Data Table */}\n              <Grid item xs={12} md={7}>\n                <Paper sx={{ p: 2, boxShadow: 2, overflow: 'hidden' }}>\n                  <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n                    Today's Last 10 Billed Report\n                  </Typography>\n                  <Box sx={{ height: 320, width: '100%', overflow: 'hidden' }}>\n                    <DataGrid\n                      rows={\n                        (dashboardData?.last10 || []).map((row, idx) => ({\n                          ...row,\n                          id: row.id ?? row._id ?? idx + 1,\n                        }))\n                      }\n                      columns={columns}\n                      pageSize={5}\n                      rowsPerPageOptions={[5, 10, 20]}\n                      disableSelectionOnClick\n                      hideFooterSelectedRowCount\n                      sx={{\n                        border: 0,\n                        '.MuiDataGrid-virtualScroller': { overflow: 'hidden !important' },\n                        '.MuiDataGrid-main': { overflow: 'hidden !important' },\n                      }}\n                    />\n                  </Box>\n                </Paper>\n              </Grid>\n              {/* Pie Chart */}\n              <Grid item xs={12} md={5}>\n                <Paper sx={{ p: 2, boxShadow: 2, height: '100%', overflow: 'hidden' }}>\n                  <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n                    Month Report (Revenue by Category)\n                  </Typography>\n                  <ResponsiveContainer width=\"100%\" height={250}>\n                    <PieChart>\n                      <Pie\n                        data={pieData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                        outerRadius={90}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                      >\n                        {pieData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </Paper>\n              </Grid>\n            </Grid>\n\n           \n          </Box> \n        </Grid>\n      </Grid>\n    );\n  };\n  \n  export default Home;"],"names":["menuItems","label","icon","_jsx","DashboardIcon","path","routesName","DASHBOARD","color","PeopleIcon","LIST_ALL_USERS","ReceiptIcon","BILLING","CategoryIcon","BILLING_ITEM","BILLING_CATEGORY","CalendarMonthIcon","FINANCIALYEAR","LogoutIcon","logout","_ref","onLogout","navigate","useNavigate","location","useLocation","hovered","setHovered","useState","Box","sx","width","xs","sm","flexShrink","top","left","marginTop","background","minHeight","boxShadow","position","zIndex","height","overflow","children","_jsxs","Drawer","variant","boxSizing","borderRight","display","marginLeft","alignItems","minWidth","justifyContent","src","require","alt","style","filter","Toolbar","borderBottom","List","p","map","item","idx","React","Tooltip","title","placement","arrow","ListItem","button","onClick","handleMenuClick","selected","pathname","onMouseEnter","onMouseLeave","padding","margin","borderRadius","transition","cursor","transform","outline","ListItemIcon","mr","fontSize","ListItemText","primary","Typography","fontWeight","letterSpacing","textShadow","IDLE_TIMEOUT","Header","currentTime","setCurrentTime","Date","hostIp","setHostIp","locked","setLocked","getSessionTimeout","password","setPassword","passwordError","setPasswordError","idleSeconds","setIdleSeconds","idleTimer","useRef","countdownTimer","data","useSelector","state","users","errorTxt","setErrorTxt","loading","setLoading","error","setError","dispatch","useDispatch","passwordInput","useEffect","timer","setInterval","clearInterval","fetch","then","res","json","ip","catch","resetIdleTimer","current","clearTimeout","prev","setSessionTimeout","setTimeout","events","forEach","event","window","addEventListener","removeEventListener","handleUnlock","fetchUsers","username","getUserIdFromToken","focus","payload","clearSessionTimeout","_Fragment","AppBar","elevation","flexWrap","ml","gap","toLocaleTimeString","secs","Math","floor","toString","padStart","getUsernameFromToken","IconButton","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","FullscreenIcon","Button","startIcon","async","localStorage","clear","textTransform","Dialog","open","fullWidth","maxWidth","PaperProps","textAlign","py","LockIcon","mb","DialogTitle","DialogContent","TextField","type","inputRef","value","onChange","e","target","helperText","autoFocus","onKeyDown","key","DialogActions","pieData","name","COLORS","count","_dashboardData$today$","_dashboardData$today","_dashboardData$today$2","_dashboardData$today2","_dashboardData$month$","_dashboardData$month","element","printData","setPrintData","dashboardData","dashboard","isTokenExpired","fetchDashboardData","cardData","today","parseFloat","sum","toFixed","MonetizationOnIcon","gradient","Array","isArray","todayByPaymentType","_item$sum","_id","PaymentIcon","month","PieChartIcon","columns","field","headerName","renderCell","params","size","EDITBILLING","row","handlePrint","Grid","container","m","flexGrow","md","flexDirection","WebkitBackgroundClip","WebkitTextFillColor","wordBreak","mt","card","Card","px","flex","opacity","spacing","Paper","DataGrid","rows","last10","_ref2","_row$id","id","pageSize","rowsPerPageOptions","disableSelectionOnClick","hideFooterSelectedRowCount","border","ResponsiveContainer","PieChart","Pie","cx","cy","labelLine","_ref3","percent","outerRadius","fill","dataKey","entry","index","Cell","length","Legend"],"sourceRoot":""}