{"version":3,"file":"static/js/19.787b7072.chunk.js","mappings":"sPAMA,MA6EA,EA7EuBA,KACnB,MAAOC,EAAiBC,GAAsBC,EAAAA,SAAe,KACtDC,EAAaC,GAAkBF,EAAAA,SAAe,KAC9CG,EAAiBC,GAAsBJ,EAAAA,SAAe,KACtDK,EAAUC,GAAeN,EAAAA,SAAe,IACzCO,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,EAAI,QAAEC,EAAO,MAAEC,IAAUC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,OAwB9D,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,OAAQC,OAAQ,QAASC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,gBAAiB,WAAYC,UACrIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACT,GAAI,CAAEC,MAAO,QAASS,QAAS,QAASH,SAAA,EAC1CT,EAAAA,EAAAA,KAAA,OAAKa,IAAKC,EAAQ,OAAoCC,IAAI,kBAAkBC,MAAO,CAAEb,MAAO,QAASC,OAAQ,OAAQC,QAAS,QAASY,OAAQ,kBAC/IjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAChB,GAAI,CAAEiB,UAAW,UAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAAAb,SAAC,qBAGlFC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACIT,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CACNC,MAAM,mBACNJ,QAAQ,WACRK,WAAS,EACTR,OAAO,SACPS,KAAK,WACLC,SAAWC,GAAM9C,EAAmB8C,EAAEC,OAAOC,UAEjD9B,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CACNC,MAAM,eACNJ,QAAQ,WACRK,WAAS,EACTR,OAAO,SACPS,KAAK,WACLC,SAAWC,GAAM3C,EAAe2C,EAAEC,OAAOC,UAE7C9B,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CACNC,MAAM,uBACNJ,QAAQ,WACRK,WAAS,EACTR,OAAO,SACPS,KAAK,WACLC,SAAWC,GAAMzC,EAAmByC,EAAEC,OAAOC,UAEjD9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACC,QAvDMJ,IAC1BA,EAAEK,iBACGpD,GAAoBG,GAAgBE,EAE9BF,IAAgBE,EACvBG,EAAY,kDACLL,EAAYkD,OAAS,EAC5B7C,EAAY,oDAGZC,GAAS6C,EAAAA,EAAAA,GAAe,CAAEtD,kBAAiBG,iBACvCW,EACAN,EAAY,kDACLK,GACPL,EAAY,iCACZ+C,WAAW,KACP5C,EAAS,MACV,MAEHH,EAAY,+CAhBhBA,EAAY,4BAoDmC+B,QAAQ,YAAYiB,MAAM,UAAUZ,WAAS,EAACC,KAAK,SAAQjB,SAAC,oBAGlGrB,IAAYY,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACmB,MAAM,QAAQjB,QAAQ,QAAQlB,GAAI,CAAEiB,UAAW,SAAUP,QAAS,OAAQ0B,cAAe,cAAe7B,SAAErB,KAEvIsB,EAAAA,EAAAA,MAACQ,EAAAA,EAAU,CAACE,QAAQ,QAAQlB,GAAI,CAAEqC,UAAW,OAAQpB,UAAW,UAAWV,SAAA,CAAC,8BAC9CT,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,GAAG,SAAQhC,SAAC,qB","sources":["app/auth/changePassword/index.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changePassword } from '../../redux/changePasswordSlice';\nimport { Box, Card, Typography, TextField, Button } from '@mui/material';\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link for navigation\n\nconst ChangePassword = () => {\n    const [currentPassword, setCurrentPassword] = React.useState('');\n    const [newPassword, setNewPassword] = React.useState('');\n    const [confirmPassword, setConfirmPassword] = React.useState('');\n    const [errorTxt, setErrorTxt] = React.useState('');\n    const dispatch = useDispatch();\n    const navigate = useNavigate(); // Use useNavigate for programmatic navigation\n    const { data, loading, error } = useSelector((state) => state.users);\n    const handleChangePassword = (e) => {\n        e.preventDefault();\n        if (!currentPassword || !newPassword || !confirmPassword) {\n            setErrorTxt('All fields are required');\n        } else if (newPassword !== confirmPassword) {\n            setErrorTxt('New Password and Confirm Password do not match');\n        } else if (newPassword.length < 8) {    \n            setErrorTxt('New Password must be at least 8 characters long');\n        } else {\n            // Dispatch change password action\n            dispatch(changePassword({ currentPassword, newPassword }));\n            if (loading) {\n                setErrorTxt('Please wait, we are processing your request...');\n            } else if (data) {\n                setErrorTxt('Password changed successfully');\n                setTimeout(() => {\n                    navigate('/');\n                }, 2000);\n            } else {\n                setErrorTxt('Error changing password. Please try again.');\n            }\n        }\n    };\n    return (\n        <Box sx={{ width: '100%', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: '#f5f5f5' }}>\n            <Card sx={{ width: '400px', padding: '20px' }}>\n                <img src={require('../../../assets/images/logo.png')} alt=\"Change Password\" style={{ width: '160px', height: '80px', display: 'block', margin: '0 auto 20px' }} />\n                <Typography sx={{ textAlign: 'center' }} variant=\"h5\" component=\"h2\" gutterBottom>\n                    Change Password\n                </Typography>\n                <form>\n                    <TextField\n                        label=\"Current Password\"\n                        variant=\"outlined\"\n                        fullWidth\n                        margin=\"normal\"\n                        type=\"password\"\n                        onChange={(e) => setCurrentPassword(e.target.value)}\n                    />\n                    <TextField\n                        label=\"New Password\"\n                        variant=\"outlined\"\n                        fullWidth   \n                        margin=\"normal\"\n                        type=\"password\"\n                        onChange={(e) => setNewPassword(e.target.value)}\n                    />\n                    <TextField\n                        label=\"Confirm New Password\"\n                        variant=\"outlined\"\n                        fullWidth\n                        margin=\"normal\"\n                        type=\"password\"\n                        onChange={(e) => setConfirmPassword(e.target.value)}        \n                    />\n                    <Button onClick={handleChangePassword} variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\n                        Change Password\n                    </Button>\n                    {errorTxt && <Typography color=\"error\" variant=\"body2\" sx={{ textAlign: 'center', padding: '10px', textTransform: 'capitalize' }}>{errorTxt}</Typography>}\n                \n                <Typography variant=\"body2\" sx={{ marginTop: '10px', textAlign: 'center' }}>\n                    Remembered your password? <Link to=\"/login\">Login</Link>\n                </Typography> \n                    {/* Form fields for changing password */}\n                </form>\n            </Card>\n        </Box>\n    );\n}\nexport default ChangePassword;"],"names":["ChangePassword","currentPassword","setCurrentPassword","React","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorTxt","setErrorTxt","dispatch","useDispatch","navigate","useNavigate","data","loading","error","useSelector","state","users","_jsx","Box","sx","width","height","display","justifyContent","alignItems","backgroundColor","children","_jsxs","Card","padding","src","require","alt","style","margin","Typography","textAlign","variant","component","gutterBottom","TextField","label","fullWidth","type","onChange","e","target","value","Button","onClick","preventDefault","length","changePassword","setTimeout","color","textTransform","marginTop","Link","to"],"sourceRoot":""}