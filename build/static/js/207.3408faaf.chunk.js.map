{"version":3,"file":"static/js/207.3408faaf.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Divider/dividerClasses.js","../node_modules/@mui/material/esm/MenuItem/menuItemClasses.js","../node_modules/@mui/material/esm/MenuItem/MenuItem.js","app/user/modifyUser.jsx","../node_modules/@mui/material/esm/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/esm/ListItemIcon/listItemIconClasses.js","utills/index.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport useEnhancedEffect from \"../utils/useEnhancedEffect.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport { dividerClasses } from \"../Divider/index.js\";\nimport { listItemIconClasses } from \"../ListItemIcon/index.js\";\nimport { listItemTextClasses } from \"../ListItemText/index.js\";\nimport menuItemClasses, { getMenuItemUtilityClass } from \"./menuItemClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return {\n    ...classes,\n    ...composedClasses\n  };\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap',\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.alpha((theme.vars || theme).palette.primary.main, (theme.vars || theme).palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.alpha((theme.vars || theme).palette.primary.main, `${(theme.vars || theme).palette.action.selectedOpacity} + ${(theme.vars || theme).palette.action.focusOpacity}`)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.alpha((theme.vars || theme).palette.primary.main, `${(theme.vars || theme).palette.action.selectedOpacity} + ${(theme.vars || theme).palette.action.hoverOpacity}`),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.alpha((theme.vars || theme).palette.primary.main, (theme.vars || theme).palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.divider,\n    style: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      backgroundClip: 'padding-box'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dense,\n    style: {\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.dense,\n    style: {\n      minHeight: 32,\n      // https://m2.material.io/components/menus#specs > Dense\n      paddingTop: 4,\n      paddingBottom: 4,\n      ...theme.typography.body2,\n      [`& .${listItemIconClasses.root} svg`]: {\n        fontSize: '1.25rem'\n      }\n    }\n  }]\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp,\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = {\n    ...props,\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  };\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, {\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className),\n      ...other,\n      ownerState: ownerState,\n      classes: classes\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import React, { use, useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUsersList } from '../redux/userListSlice';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchUserRoles } from '../redux/userRoleSlice';\nimport { Box, Button, Grid, MenuItem, Paper, Select, TextField, Typography } from '@mui/material';\nimport { checkvalidEmail, checkvalidPassword } from '../../utills';\nimport { updateUser } from '../redux/updateUserSlice';\nimport {routesName} from '../constants/routesName';\n\nconst ModifyUser = () => {\n    const screenwidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const { userId } = useParams();\n    const userData = useLocation().state?.user || {};\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [mobile, setMobile] = useState('');\n    const [role, setRole] = useState('');\n    const [status, setStatus] = useState(true); // Assuming true is for active status\n    const [errorTxt, setErrorTxt] = useState(''); \n    const firstNameInput = useRef(null);\n    const lastNameInput = useRef(null);\n    const mobileInput = useRef(null);\n    const emailInput = useRef(null); \n    const roleInput = useRef(null);\n    const { data, loading, error } = useSelector((state) => state.updateUser);\n    const { roles } = useSelector((state) => state.userRole);\n    useEffect(() => {\n        if (userId) {\n            dispatch(fetchUsersList({ id: userId }));\n            setFirstName(userData.firstname || '');\n            setLastName(userData.lastname || '');\n            setEmail(userData.email || '');\n            setMobile(userData.mobilenumber || ''); \n        }\n    }, [userId, dispatch, userData]);\n\n    const handleModifyUser = () => {\n        // Logic to modify the user data\n        // console.log('Modifying user:', userData);\n        // After modification, you can navigate back or to another page\n        navigate('/user-list');\n    };\n     const handleSubmit = (e) => {\n            e.preventDefault();\n            const isValidEmail = checkvalidEmail(email); \n\n            if (!firstName && !userData.firstname) {\n                setErrorTxt('First Name is required');\n                firstNameInput.current.focus(); \n            } else if (!lastName && !userData.lastname) {\n                setErrorTxt('Last Name is required');\n                lastNameInput.current.focus();\n            } else if (!mobile && !userData.mobilenumber) {\n                setErrorTxt('Mobile is required');\n                mobileInput.current.focus();    \n            }if (!email && !userData.email) {\n                setErrorTxt('Email is required');\n                emailInput.current.focus();\n            }else if (!role && !userData.role) {\n                setErrorTxt('Role is required');\n                roleInput.current.focus();\n            }else {\n                const data={\n                    firstname:firstName ? firstName : userData.firstname,\n                    lastname:lastName ? lastName : userData.lastname, \n                    mobilenumber:mobile ? mobile : userData.mobilenumber,\n                    email : email ? email : userData.email,   \n                    role: role ? role : userData.role, // Default role, can be changed as needed\n                    status: status ? status : userData.status // Assuming 1 is for active status\n                }\n                \n                dispatch(updateUser(userId, data))\n                    .then((response) => {\n                        if (response.error) {\n                            setErrorTxt(response.error.message);\n                        }else if(loading){\n                            setErrorTxt('Please Wait We Are Registering The user...');\n                        } else {\n                            setErrorTxt('Registration Successful'); \n                            // window.location.href = routesName.LIST_ALL_USERS; // Redirect to login page after successful registration\n                        }\n                    });\n            }\n        };\n    return (\n        <Box sx={{ width: (screenwidth - 240) + 'px' }}>\n            <Box sx={{ display: 'flex', border: '1px solid #ccc', backgroundColor: '#f5f5f5', padding: '10px', marginBottom: '20px' }}>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    Update User Details\n                </Typography>\n                <Button variant=\"contained\" color=\"primary\" sx={{ marginLeft: 'auto' }} onClick={() => window.location.href = '/list-all-users'}>\n                    List All Users\n                </Button>\n            </Box>\n            <Paper sx={{ padding: 2, marginBottom: 2 }}>\n                {/* <Typography variant=\"h6\">User Details</Typography> */}\n                <Grid container spacing={2}>\n                    <form>\n                        {/* firstname lastname mobile fields */}\n                        <TextField\n                            ref={firstNameInput}  \n                            variant=\"outlined\"\n                            fullWidth\n                            margin=\"normal\"\n                            type=\"text\"\n                            onChange={(e) => setFirstName(e.target.value)}\n                            value={firstName ?  firstName : userData.firstname}\n                        />\n                        <TextField\n                            ref={lastNameInput} \n                            variant=\"outlined\"\n                            fullWidth\n                            margin=\"normal\"\n                            type=\"text\"\n                            onChange={(e) => setLastName(e.target.value)}\n                            value={lastName ? lastName : userData.lastname}\n                        />\n                        <TextField\n                            ref={mobileInput} \n                            variant=\"outlined\"\n                            fullWidth\n                            margin=\"normal\"\n                            type=\"text\"\n                            onChange={(e) => setMobile(e.target.value)}\n                            value={mobile ? mobile : userData.mobilenumber}\n                        />\n                        <TextField\n                            ref={emailInput} \n                            variant=\"outlined\"\n                            fullWidth\n                            margin=\"normal\"\n                            type=\"email\"\n                            onChange={(e) => setEmail(e.target.value)}\n                            value={email ? email : userData.email}\n                        /> \n                        <Select\n                            ref={roleInput}\n                            label=\"Role\"\n                            variant=\"outlined\"\n                            fullWidth\n                            margin=\"normal\"\n                            value={role ? role : userData.role}\n                            onChange={(e) => setRole(e.target.value)}\n                            sx={{ marginTop: 2 }}\n                        >\n                            <MenuItem value=\"\">Select Role</MenuItem>\n                            {roles && roles.map((role) => (\n                                <MenuItem key={role._id} value={role._id}>\n                                    {role.rolename}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <Select\n                            variant=\"outlined\"\n                            fullWidth\n                            margin=\"normal\"\n                            value={status ? status : userData.status}       \n                            onChange={(e) => setStatus(e.target.value)}\n                            sx={{ marginTop: 2 }}\n                        >\n                            <MenuItem value={1}>Active</MenuItem>\n                            <MenuItem value={9}>Inactive</MenuItem>\n                        </Select>\n                        {errorTxt && <Typography color=\"error\" variant=\"body2\" sx={{ textAlign: 'center', padding: '10px', textTransform: 'capitalize' }}>{errorTxt}</Typography>}\n\n                    </form>\n\n                </Grid>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} sx={{ marginTop: 2 }}>\n                    Save Changes\n                </Button>\n            </Paper>\n        </Box>\n    );\n}\n\nexport default ModifyUser;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","export const formatDate = (date) => {\n  const options = {  day: 'numeric', month: 'long', year: 'numeric' };\n  return new Date(date).toLocaleDateString(undefined, options);\n}\nexport const formatTime = (time) => {\n  const options = { hour: '2-digit', minute: '2-digit', second: '2-digit' };\n  return new Date(time).toLocaleTimeString(undefined, options);\n}\nexport const formatDateTime = (dateTime) => {\n  const date = formatDate(dateTime);\n  const time = formatTime(dateTime);\n  return `${date} at ${time}`;\n}\nexport const formatNumber = (number) => {\n  return new Intl.NumberFormat().format(number);\n}\nexport const formatCurrency = (amount, currency = 'USD') => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currency\n  }).format(amount);\n}\nexport const formatPercentage = (value) => {\n  return `${(value * 100).toFixed(2)}%`;\n}\nexport const formatDuration = (seconds) => {    \n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n}   \nexport const checkvalidEmail = (email) => {\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return re.test(String(email).toLowerCase());\n}\nexport const checkvalidPhone = (phone) => {\n  const re = /^\\+?[1-9]\\d{1,14}$/; // E.164 format\n  return re.test(String(phone).toLowerCase());\n}\nexport const checkvalidPassword = (password) => {\n  // At least 8 characters, one uppercase, one lowercase, one number, and one special character\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  return re.test(String(password));\n}\nexport const windowWidth = () => {\n  return  window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n}\n"],"names":["getDividerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","getMenuItemUtilityClass","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","memoTheme","_ref","theme","typography","body1","display","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","backgroundColor","vars","palette","action","hover","menuItemClasses","selected","alpha","primary","main","selectedOpacity","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","paddingLeft","listItemIconClasses","minWidth","variants","_ref2","style","paddingRight","_ref3","borderBottom","backgroundClip","_ref4","breakpoints","up","_ref5","body2","fontSize","React","inProps","ref","useDefaultProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","className","other","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","Provider","value","children","clsx","ModifyUser","_useLocation$state","screenwidth","window","innerWidth","document","documentElement","clientWidth","body","userId","useParams","userData","useLocation","state","user","dispatch","useDispatch","email","setEmail","useNavigate","useState","password","setPassword","firstName","setFirstName","lastName","setLastName","mobile","setMobile","setRole","status","setStatus","errorTxt","setErrorTxt","firstNameInput","useRef","lastNameInput","mobileInput","emailInput","roleInput","data","loading","error","useSelector","updateUser","roles","userRole","useEffect","fetchUsersList","id","firstname","lastname","mobilenumber","_jsxs","Box","sx","width","border","padding","Typography","variant","color","Button","onClick","location","href","Paper","Grid","container","TextField","fullWidth","margin","type","onChange","e","target","Select","label","MenuItem","map","_id","rolename","textAlign","textTransform","preventDefault","checkvalidEmail","then","response","message","getListItemTextUtilityClass","getListItemIconUtilityClass","formatDate","date","Date","toLocaleDateString","day","month","year","test","String","toLowerCase","checkvalidPassword","windowWidth"],"sourceRoot":""}