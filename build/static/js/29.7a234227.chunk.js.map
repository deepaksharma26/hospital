{"version":3,"file":"static/js/29.7a234227.chunk.js","mappings":"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","sources":["app/financialYear/FinancialYear.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, TextField, Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addOrUpdateFinancialYear, fetchFinancialYear } from '../redux/financialYearSlice';\n\nconst FinancialYear = () => {\n  const dispatch = useDispatch();\n  const { financialYears, loading, error } = useSelector((state) => state.financialYear);\n   const [form, setForm] = useState({ \n    description: '',\n    name: '',\n    startDate: '',\n    endDate: '', \n  });\n  const [isEdit, setIsEdit] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchFinancialYear());\n  }, [dispatch]);\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Dispatch add or update action here\n    const data = {\n      ...form,\n      startDate: new Date(form.startDate).toISOString(),\n      endDate: new Date(form.endDate).toISOString(),\n    };\n    dispatch(addOrUpdateFinancialYear(data));\n    setForm({ description: '', name: '', startDate: '', endDate: '' });\n    setIsEdit(false);\n  };\n\n  const handleEdit = (row) => {\n    setForm(row);\n    setIsEdit(true);\n  };\n\n  return (\n    <Box sx={{ p: { xs: 1, sm: 3 } }}>\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          {isEdit ? 'Edit Financial Year' : 'Add Financial Year'}\n        </Typography>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                label=\"Year\"\n                name=\"name\"\n                value={form.name}\n                onChange={handleChange}\n                required\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                label=\"Description\"\n                name=\"description\"\n                value={form.description}\n                onChange={handleChange}\n                required\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                label=\"Start Date\"\n                name=\"startDate\"\n                type=\"date\"\n                value={form.startDate}\n                onChange={handleChange}\n                required\n                fullWidth\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                label=\"End Date\"\n                name=\"endDate\"\n                type=\"date\"\n                value={form.endDate}\n                onChange={handleChange}\n                required\n                fullWidth\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                {isEdit ? 'Update' : 'Add'}\n              </Button>\n              {isEdit && (\n                <Button\n                  variant=\"outlined\"\n                  sx={{ ml: 2 }}\n                  onClick={() => {\n                    setForm({ name: '', description:'', startDate: '', endDate: '' });\n                    setIsEdit(false);\n                  }}\n                >\n                  Cancel\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Paper sx={{ p: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Financial Years\n        </Typography>\n        {loading ? (\n          <Typography>Loading...</Typography>\n        ) : error ? (\n          <Typography color=\"error\">{error}</Typography>\n        ) : (\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Year</TableCell>\n                  <TableCell>Details</TableCell>\n                  <TableCell>Start Date</TableCell>\n                  <TableCell>End Date</TableCell>\n                  <TableCell>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {financialYears && financialYears.map((row,index) => (\n                  <TableRow key={index}>\n                    <TableCell>{row?.name}</TableCell>\n                    <TableCell>{row?.description}</TableCell>\n                    <TableCell>{row?.startDate}</TableCell> \n                    <TableCell>{row?.endDate}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onClick={() => handleEdit(row)}\n                      >\n                        Edit\n                      </Button>\n                      {/* Add Delete button if needed */}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default FinancialYear;"],"names":["FinancialYear","dispatch","useDispatch","financialYears","loading","error","useSelector","state","financialYear","form","setForm","useState","description","name","startDate","endDate","isEdit","setIsEdit","useEffect","fetchFinancialYear","handleChange","e","target","value","_jsxs","Box","sx","p","xs","sm","children","Paper","mb","_jsx","Typography","variant","gutterBottom","onSubmit","preventDefault","data","Date","toISOString","addOrUpdateFinancialYear","Grid","container","spacing","item","TextField","label","onChange","required","fullWidth","type","InputLabelProps","shrink","Button","color","ml","onClick","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","index","handleEdit"],"sourceRoot":""}